  AmiBroker.Data.ConfigureForm.resources - Embedded, ContainedInManifestFile, 
  AmiBroker.PlugIn.Protected.StartupAlertForm.resources - Embedded, ContainedInManifestFile, 
ImageRuntimeVersion: v2.0.50727
Assembly AmiBroker.PlugInHost, Version=6.90.0.0, Culture=neutral, PublicKeyToken=c0d4fd12d3adc8e5: 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Runtime.Remoting, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Security, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Class AmiBroker.MonteCarloSim: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    GetValue(String, Single): PrivateScope, Public, HideBySig
Struct AmiBroker.Notify: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.Notify Clicked = 1 : Public, Static, Literal, HasDefault
    AmiBroker.Notify SetFocus = 2 : Public, Static, Literal, HasDefault
    AmiBroker.Notify KillFocus = 4 : Public, Static, Literal, HasDefault
    AmiBroker.Notify HitReturn = 8 : Public, Static, Literal, HasDefault
    AmiBroker.Notify EditChange = 16 : Public, Static, Literal, HasDefault
    AmiBroker.Notify SelChange = 32 : Public, Static, Literal, HasDefault
    AmiBroker.Notify MouseEnter = 64 : Public, Static, Literal, HasDefault
    AmiBroker.Notify MouseLeave = 128 : Public, Static, Literal, HasDefault
    AmiBroker.Notify KeyDown = 65536 : Public, Static, Literal, HasDefault
Class AmiBroker.AFGraph: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    PlotTextSetFont(String, String, Single, Single, Single, Color, Color, Single): PrivateScope, Public, Static, HideBySig
    PlotTextSetFont(String, String, Single, Single, Single, Color, Color): PrivateScope, Public, Static, HideBySig
    PlotTextSetFont(String, String, Single, Single, Single, Color): PrivateScope, Public, Static, HideBySig
    PlotVAPOverlay(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotVAPOverlay(Single, Single, Color, VapStyle): PrivateScope, Public, Static, HideBySig
    PlotVAPOverlay(Single, Single): PrivateScope, Public, Static, HideBySig
    PlotVAPOverlay(Single): PrivateScope, Public, Static, HideBySig
    PlotVAPOverlay(): PrivateScope, Public, Static, HideBySig
    PlotVAPOverlayA(ATArray, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotVAPOverlayA(ATArray, Single, Single, Color, VapStyle): PrivateScope, Public, Static, HideBySig
    PlotVAPOverlayA(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotVAPOverlayA(ATArray, Single): PrivateScope, Public, Static, HideBySig
    PlotVAPOverlayA(ATArray): PrivateScope, Public, Static, HideBySig
    GfxSelectHatchBrush(Single, Single): PrivateScope, Public, Static, HideBySig
    GfxSelectHatchBrush(Color, Style): PrivateScope, Public, Static, HideBySig
    GfxSelectStockObject(Single): PrivateScope, Public, Static, HideBySig
    GfxFillSolidRect(Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GfxDrawImage(String, Single, Single): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, Single, Single): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, Single): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, Color, Style, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, Color, Style, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, Color, Style, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, Color, Style, Single, Single): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, Color, Style): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, Color): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, ATArray, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, ATArray, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, ATArray, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, ATArray, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, ATArray, Single): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, ATArray, Style, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, ATArray, Style, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, ATArray, Style, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, ATArray, Style, Single, Single): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, ATArray, Style): PrivateScope, Public, Static, HideBySig
    Plot(ATArray, String, ATArray): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, Single): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, Color, Style, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, Color, Style, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, Color, Style, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, Color, Style, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, Color, Style): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, Color): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, ATArray, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, ATArray, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, ATArray, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, ATArray, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, ATArray, Single): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, ATArray, Style, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, ATArray, Style, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, ATArray, Style, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, ATArray, Style, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, ATArray, Style): PrivateScope, Public, Static, HideBySig
    PlotForeign(String, String, ATArray): PrivateScope, Public, Static, HideBySig
    PlotGrid(Single, Color, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotGrid(Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotGrid(Single, Color, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotGrid(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotGrid(Single, Color, Single): PrivateScope, Public, Static, HideBySig
    PlotGrid(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotGrid(Single, Color): PrivateScope, Public, Static, HideBySig
    PlotGrid(Single, Single): PrivateScope, Public, Static, HideBySig
    PlotGrid(Single): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, Single): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, Color, Style, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, Color, Style, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, Color, Style, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, Color, Style, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, Color, Style): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, Color): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, ATArray, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, ATArray, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, ATArray, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, ATArray, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, ATArray, Single): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, ATArray, Style, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, ATArray, Style, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, ATArray, Style, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, ATArray, Style, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, ATArray, Style): PrivateScope, Public, Static, HideBySig
    PlotOHLC(ATArray, ATArray, ATArray, ATArray, String, ATArray): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, ATArray, Single, ATArray, ATArray, Single): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, ATArray, Single, ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, ATArray, Single, ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, ATArray, Single, ATArray, Single): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, ATArray, Single, ATArray): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, ATArray, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, ATArray, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, ATArray, Single): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, Color, Single, ATArray, ATArray, Single): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, Color, Single, ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, Color, Single, ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, Color, Single, ATArray, Single): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, Color, Single, ATArray): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, Color, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, Color, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, Color, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, Color, Single): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, Color): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, Single, Single, ATArray, ATArray, Single): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, Single, Single, ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, Single, Single, ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, Single, Single, ATArray, Single): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, Single, Single, ATArray): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotShapes(ATArray, Single): PrivateScope, Public, Static, HideBySig
    PlotText(String, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotText(String, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotText(String, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotText(String, Single, Single, Color, Color, Single): PrivateScope, Public, Static, HideBySig
    PlotText(String, Single, Single, Color, Color): PrivateScope, Public, Static, HideBySig
    PlotText(String, Single, Single, Color): PrivateScope, Public, Static, HideBySig
    PlotTextSetFont(String, String, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotTextSetFont(String, String, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PlotTextSetFont(String, String, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GuiButton(String, Single, Single, Single, Single, Single, Notify): PrivateScope, Public, Static, HideBySig
    GuiButton(String, Single, Single, Single, Single, Single, Notify, Single): PrivateScope, Public, Static, HideBySig
    GuiEdit(Single, Single, Single, Single, Single, Notify): PrivateScope, Public, Static, HideBySig
    GuiEdit(Single, Single, Single, Single, Single, Notify, Single): PrivateScope, Public, Static, HideBySig
    GuiCheckBox(String, Single, Single, Single, Single, Single, Notify): PrivateScope, Public, Static, HideBySig
    GuiCheckBox(String, Single, Single, Single, Single, Single, Notify, Single): PrivateScope, Public, Static, HideBySig
    GuiDateTime(Single, Single, Single, Single, Single, Notify): PrivateScope, Public, Static, HideBySig
    GuiDateTime(Single, Single, Single, Single, Single, Notify, Single): PrivateScope, Public, Static, HideBySig
    GuiRadio(String, Single, Single, Single, Single, Single, Notify): PrivateScope, Public, Static, HideBySig
    GuiRadio(String, Single, Single, Single, Single, Single, Notify, Single): PrivateScope, Public, Static, HideBySig
    GuiSlider(Single, Single, Single, Single, Single, Notify): PrivateScope, Public, Static, HideBySig
    GuiSlider(Single, Single, Single, Single, Single, Notify, Single): PrivateScope, Public, Static, HideBySig
    GuiToggle(String, Single, Single, Single, Single, Single, Notify): PrivateScope, Public, Static, HideBySig
    GuiToggle(String, Single, Single, Single, Single, Single, Notify, Single): PrivateScope, Public, Static, HideBySig
    GuiGetEvent(Single, Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GuiEnable(Single, Single): PrivateScope, Public, Static, HideBySig
    GuiSetVisible(Single, Single): PrivateScope, Public, Static, HideBySig
    GuiGetText(Single): PrivateScope, Public, Static, HideBySig
    GuiSetText(String, Single): PrivateScope, Public, Static, HideBySig
    GuiGetValue(Single): PrivateScope, Public, Static, HideBySig
    GuiSetValue(Single, Single): PrivateScope, Public, Static, HideBySig
    GuiGetCheck(Single): PrivateScope, Public, Static, HideBySig
    GuiSetCheck(Single, Single): PrivateScope, Public, Static, HideBySig
    GuiSetFont(String, Single): PrivateScope, Public, Static, HideBySig
    GuiSetRange(Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GuiSetColors(Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GuiSetColors(Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GuiSetColors(Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GuiSetColors(Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GuiSetColors(Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GuiSetColors(Single, Single, Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GuiSetColors(Single, Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GuiSetColors(Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GuiSetColors(Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GuiSetColors(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GuiSetColors(Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GuiSetColors(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GuiSetColors(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    RequestMouseMoveRefresh(): PrivateScope, Public, Static, HideBySig
    GuiSendKeyEvents(String): PrivateScope, Public, Static, HideBySig
    SetBarFillColor(Color): PrivateScope, Public, Static, HideBySig
    SetBarFillColor(Single): PrivateScope, Public, Static, HideBySig
    SetBarFillColor(ATArray): PrivateScope, Public, Static, HideBySig
    SetChartBkGradientFill(Single, Single): PrivateScope, Public, Static, HideBySig
    SetChartBkGradientFill(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    SetChartBkGradientFill(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    SetChartBkGradientFill(Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    SetChartBkGradientFill(Color, Color): PrivateScope, Public, Static, HideBySig
    SetChartBkGradientFill(Color, Color, Color): PrivateScope, Public, Static, HideBySig
    SetChartBkGradientFill(Color, Color, Color, Single): PrivateScope, Public, Static, HideBySig
    SetChartBkGradientFill(Color, Color, Color, Single, Single): PrivateScope, Public, Static, HideBySig
    GetChartBkColor(): PrivateScope, Public, Static, HideBySig
    SetChartBkColor(Color): PrivateScope, Public, Static, HideBySig
    SetChartBkColor(Single): PrivateScope, Public, Static, HideBySig
    ColorHsb(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    ColorHsb(ATArray, ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    ColorRgb(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    ColorRgb(ATArray, ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    ColorBlend(Single, Single): PrivateScope, Public, Static, HideBySig
    ColorBlend(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    ColorBlend(Color, Color): PrivateScope, Public, Static, HideBySig
    ColorBlend(Color, Color, Single): PrivateScope, Public, Static, HideBySig
    SetChartOptions(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    SetChartOptions(Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    SetChartOptions(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    SetChartOptions(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    SetChartOptions(Single, Single): PrivateScope, Public, Static, HideBySig
    SetChartOptions(Single): PrivateScope, Public, Static, HideBySig
    SetChartOptions(): PrivateScope, Public, Static, HideBySig
    SetChartOptions(ChartOptionMode, ChartOptionFlag, ChartOptionGrid, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    SetChartOptions(ChartOptionMode, ChartOptionFlag, ChartOptionGrid, Single, Single): PrivateScope, Public, Static, HideBySig
    SetChartOptions(ChartOptionMode, ChartOptionFlag, ChartOptionGrid, Single): PrivateScope, Public, Static, HideBySig
    SetChartOptions(ChartOptionMode, ChartOptionFlag, ChartOptionGrid): PrivateScope, Public, Static, HideBySig
    SetChartOptions(ChartOptionMode, ChartOptionFlag): PrivateScope, Public, Static, HideBySig
    SetChartOptions(ChartOptionMode): PrivateScope, Public, Static, HideBySig
    SetGradientFill(Color, Color, Single, Color): PrivateScope, Public, Static, HideBySig
    SetGradientFill(Color, Color, Single): PrivateScope, Public, Static, HideBySig
    SetGradientFill(Color, Color): PrivateScope, Public, Static, HideBySig
    SetGradientFill(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    SetGradientFill(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    SetGradientFill(Single, Single): PrivateScope, Public, Static, HideBySig
    GfxArc(Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GfxChord(Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GfxCircle(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GfxDrawText(String, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GfxDrawText(String, Single, Single, Single, Single, GfxDrawTAlign): PrivateScope, Public, Static, HideBySig
    GfxDrawText(String, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GfxEllipse(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GfxGradientRect(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GfxGradientRect(Single, Single, Single, Single, Color, Color): PrivateScope, Public, Static, HideBySig
    GfxLineTo(Single, Single): PrivateScope, Public, Static, HideBySig
    GfxMoveTo(Single, Single): PrivateScope, Public, Static, HideBySig
    GfxPie(Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GfxPolygon(Single, Single, Single, Single, Single[]): PrivateScope, Public, Static, HideBySig
    GfxPolyline(Single, Single, Single, Single, Single[]): PrivateScope, Public, Static, HideBySig
    GfxRectangle(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GfxRoundRect(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GfxSelectFont(String, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GfxSelectFont(String, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GfxSelectFont(String, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GfxSelectFont(String, Single, Single): PrivateScope, Public, Static, HideBySig
    GfxSelectFont(String, Single): PrivateScope, Public, Static, HideBySig
    GfxSelectPen(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GfxSelectPen(Single, Single, GfxPenStyle): PrivateScope, Public, Static, HideBySig
    GfxSelectPen(Color, Single, GfxPenStyle): PrivateScope, Public, Static, HideBySig
    GfxSelectPen(Single, Single): PrivateScope, Public, Static, HideBySig
    GfxSelectPen(Color, Single): PrivateScope, Public, Static, HideBySig
    GfxSelectPen(Single): PrivateScope, Public, Static, HideBySig
    GfxSelectPen(Color): PrivateScope, Public, Static, HideBySig
    GfxSelectSolidBrush(Single): PrivateScope, Public, Static, HideBySig
    GfxSelectSolidBrush(Color): PrivateScope, Public, Static, HideBySig
    GfxSetBkColor(Single): PrivateScope, Public, Static, HideBySig
    GfxSetBkColor(Color): PrivateScope, Public, Static, HideBySig
    GfxSetBkMode(Single): PrivateScope, Public, Static, HideBySig
    GfxSetBkMode(GfxBkMode): PrivateScope, Public, Static, HideBySig
    GfxSetOverlayMode(): PrivateScope, Public, Static, HideBySig (Obsolete)
    GfxSetOverlayMode(Single): PrivateScope, Public, Static, HideBySig
    GfxSetOverlayMode(GfxOverLayMode): PrivateScope, Public, Static, HideBySig
    GfxSetPixel(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    GfxSetPixel(Single, Single, Color): PrivateScope, Public, Static, HideBySig
    GfxSetTextAlign(Single): PrivateScope, Public, Static, HideBySig
    GfxSetTextAlign(GfxTextAlign): PrivateScope, Public, Static, HideBySig
    GfxSetTextColor(Single): PrivateScope, Public, Static, HideBySig
    GfxSetTextColor(Color): PrivateScope, Public, Static, HideBySig
    GfxTextOut(String, Single, Single): PrivateScope, Public, Static, HideBySig
    GfxSetCoordsMode(Single): PrivateScope, Public, Static, HideBySig
    GfxGetTextWidth(String): PrivateScope, Public, Static, HideBySig
    GfxSetZOrder(Single): PrivateScope, Public, Static, HideBySig
Class AmiBroker.AFStr: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Asc(String): PrivateScope, Public, Static, HideBySig
    Asc(String, Single): PrivateScope, Public, Static, HideBySig
    DateTimeToStr(Single): PrivateScope, Public, Static, HideBySig
    DateTimeToStr(Single, Single): PrivateScope, Public, Static, HideBySig
    NumToStr(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    NumToStr(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    NumToStr(Single, Single, Boolean): PrivateScope, Public, Static, HideBySig
    NumToStr(Single, Single): PrivateScope, Public, Static, HideBySig
    NumToStr(Single): PrivateScope, Public, Static, HideBySig
    NumToStr(ATArray, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    NumToStr(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    NumToStr(ATArray, Single, Boolean): PrivateScope, Public, Static, HideBySig
    NumToStr(ATArray, Single): PrivateScope, Public, Static, HideBySig
    NumToStr(ATArray): PrivateScope, Public, Static, HideBySig
    printf(String): PrivateScope, Public, Static, HideBySig
    printf(String, Single): PrivateScope, Public, Static, HideBySig
    printf(String, ATArray): PrivateScope, Public, Static, HideBySig
    printf(String, String): PrivateScope, Public, Static, HideBySig
    printf(String, ATVar): PrivateScope, Public, Static, HideBySig
    printf(String, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    printf(String, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    printf(String, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    printf(String, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    printf(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    printf(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    printf(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    printf(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    printf(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    printf(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    printf(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    printf(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    printf(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    printf(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    StrCount(String, String): PrivateScope, Public, Static, HideBySig
    StrExtract(String, Single, Single): PrivateScope, Public, Static, HideBySig
    StrExtract(String, Single): PrivateScope, Public, Static, HideBySig
    StrFind(String, String): PrivateScope, Public, Static, HideBySig
    StrFormat(String): PrivateScope, Public, Static, HideBySig
    StrFormat(String, Single): PrivateScope, Public, Static, HideBySig
    StrFormat(String, ATArray): PrivateScope, Public, Static, HideBySig
    StrFormat(String, String): PrivateScope, Public, Static, HideBySig
    StrFormat(String, ATVar): PrivateScope, Public, Static, HideBySig
    StrFormat(String, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    StrFormat(String, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    StrFormat(String, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    StrFormat(String, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    StrFormat(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    StrFormat(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    StrFormat(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    StrFormat(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    StrFormat(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    StrFormat(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    StrFormat(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    StrFormat(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    StrFormat(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    StrFormat(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    StrLeft(String, Single): PrivateScope, Public, Static, HideBySig
    StrLen(String): PrivateScope, Public, Static, HideBySig
    StrMid(String, Single, Single): PrivateScope, Public, Static, HideBySig
    StrMid(String, Single): PrivateScope, Public, Static, HideBySig
    StrReplace(String, String, String): PrivateScope, Public, Static, HideBySig
    StrRight(String, Single): PrivateScope, Public, Static, HideBySig
    StrToDateTime(String): PrivateScope, Public, Static, HideBySig
    StrToLower(String): PrivateScope, Public, Static, HideBySig
    StrToNum(String): PrivateScope, Public, Static, HideBySig
    StrToUpper(String): PrivateScope, Public, Static, HideBySig
    StrSort(String, Single, Single): PrivateScope, Public, Static, HideBySig
    StrSort(String, Single): PrivateScope, Public, Static, HideBySig
    StrTrim(String, String, Single): PrivateScope, Public, Static, HideBySig
    StrTrim(String, String): PrivateScope, Public, Static, HideBySig
    StrMatch(String, String): PrivateScope, Public, Static, HideBySig
    DateTimeFormat(String, Single): PrivateScope, Public, Static, HideBySig
    Chr(Single): PrivateScope, Public, Static, HideBySig
Struct AmiBroker.ATDateTime: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt64 Date : Public
  Properties:
    Int32 Year 'get set' : 
    Int32 Month 'get set' : 
    Int32 Day  'get set' : 
    Int32 Hour 'get set' : 
    Int32 Minute 'get set' : 
    Int32 Second 'get set' : 
    Int32 MilliSec 'get set' : 
    Int32 MicroSec 'get set' : 
    Boolean IsFuture 'get set' : 
    Boolean IsEod 'get set' : 
  Methods:
    get_Year(): PrivateScope, Public, HideBySig, SpecialName
    set_Year(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Month(): PrivateScope, Public, HideBySig, SpecialName
    set_Month(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Day(): PrivateScope, Public, HideBySig, SpecialName
    set_Day(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Hour(): PrivateScope, Public, HideBySig, SpecialName
    set_Hour(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Minute(): PrivateScope, Public, HideBySig, SpecialName
    set_Minute(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Second(): PrivateScope, Public, HideBySig, SpecialName
    set_Second(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MilliSec(): PrivateScope, Public, HideBySig, SpecialName
    set_MilliSec(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MicroSec(): PrivateScope, Public, HideBySig, SpecialName
    set_MicroSec(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IsFuture(): PrivateScope, Public, HideBySig, SpecialName
    set_IsFuture(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsEod(): PrivateScope, Public, HideBySig, SpecialName
    set_IsEod(Boolean): PrivateScope, Public, HideBySig, SpecialName
    op_Explicit(ATDateTime): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(DateTime): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class AmiBroker.ATDateTimeArray: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  Properties:
    Int32 Length 'get ' : 
    AmiBroker.ATDateTime* Array 'get ' : 
    AmiBroker.ATDateTime Item [Int32] 'get set' : 
  Methods:
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_Array(): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, ATDateTime): PrivateScope, Public, HideBySig, SpecialName
Class AmiBroker.ATMatrix: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(AmiBroker.ATMatrix): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Rows 'get ' : 
    Int32 Columns 'get ' : 
    Single Item [Int32, Int32] 'get set' : 
  Methods:
    get_Rows(): PrivateScope, Public, HideBySig, SpecialName
    get_Columns(): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_Item(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Int32, Single): PrivateScope, Public, HideBySig, SpecialName
    Free(): PrivateScope, Public, HideBySig
    Copy(ATMatrix): PrivateScope, Public, HideBySig
    Fill(Single): PrivateScope, Public, HideBySig
    Nz(): PrivateScope, Public, HideBySig
    Nz(Single): PrivateScope, Public, HideBySig
    op_Addition(ATMatrix, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Single, ATMatrix): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(ATMatrix, ATMatrix): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(ATMatrix, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Single, ATMatrix): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(ATMatrix, ATMatrix): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(ATMatrix, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Single, ATMatrix): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(ATMatrix, ATMatrix): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(ATMatrix, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Single, ATMatrix): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(ATMatrix, ATMatrix): PrivateScope, Public, Static, HideBySig, SpecialName
    op_UnaryNegation(ATMatrix): PrivateScope, Public, Static, HideBySig, SpecialName
    Matrix(Single, Single, Single): PrivateScope, Public, Static, HideBySig (Obsolete)
    Matrix(Single, Single): PrivateScope, Public, Static, HideBySig (Obsolete)
    MxGetSize(ATMatrix, Single): PrivateScope, Public, Static, HideBySig (Obsolete)
    MxIdentity(Single): PrivateScope, Public, Static, HideBySig (Obsolete)
    MxTranspose(ATMatrix): PrivateScope, Public, Static, HideBySig (Obsolete)
Class AmiBroker.ABVars: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    AmiBroker.ATAfl Title : Public, Static
    AmiBroker.ATAfl ToolTip : Public, Static
    AmiBroker.ATAfl Open : Public, Static
    AmiBroker.ATAfl High : Public, Static
    AmiBroker.ATAfl Low : Public, Static
    AmiBroker.ATAfl Close : Public, Static
    AmiBroker.ATAfl Volume : Public, Static
    AmiBroker.ATAfl OpenInt : Public, Static
    AmiBroker.ATAfl Aux1 : Public, Static
    AmiBroker.ATAfl Aux2 : Public, Static
    AmiBroker.ATAfl Buy : Public, Static
    AmiBroker.ATAfl Short : Public, Static
    AmiBroker.ATAfl Sell : Public, Static
    AmiBroker.ATAfl Cover : Public, Static
    AmiBroker.ATAfl BuyPrice : Public, Static
    AmiBroker.ATAfl ShortPrice : Public, Static
    AmiBroker.ATAfl SellPrice : Public, Static
    AmiBroker.ATAfl CoverPrice : Public, Static
    AmiBroker.ATAfl TickSize : Public, Static
    AmiBroker.ATAfl PointValue : Public, Static
    AmiBroker.ATAfl MarginDeposit : Public, Static
    AmiBroker.ATAfl PositionSize : Public, Static
    AmiBroker.ATAfl PositionScore : Public, Static
    AmiBroker.ATAfl RoundLotSize : Public, Static
    AmiBroker.ATAfl Filter : Public, Static
    AmiBroker.ATAfl Exclude : Public, Static
    AmiBroker.ATAfl GraphXSpace : Public, Static
    AmiBroker.ATAfl GraphZOrder : Public, Static
Class AmiBroker.AFAvg: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Ama(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Ama(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    Ama2(ATArray, ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    Cum(ATArray): PrivateScope, Public, Static, HideBySig
    Cum(Single): PrivateScope, Public, Static, HideBySig
    Dema(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Dema(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    Ema(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Fir(ATArray, ATArray, Single): PrivateScope, Public, Static, HideBySig
    Hma(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Hma(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    Ma(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Ma(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    Sum(ATArray, Single): PrivateScope, Public, Static, HideBySig (Obsolete)
    Sum(ATArray, ATArray): PrivateScope, Public, Static, HideBySig (Obsolete)
    Tema(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Tema(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    Wilders(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Wma(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Wma(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    Iir(ATArray, Single, Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Iir(ATArray, Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Iir(ATArray, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Iir(ATArray, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Iir(ATArray, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Iir(ATArray, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Iir(ATArray, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Iir(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    Iir(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Iir(ATArray): PrivateScope, Public, Static, HideBySig
    CumProd(ATArray): PrivateScope, Public, Static, HideBySig
    CumProd(Single): PrivateScope, Public, Static, HideBySig
    Prod(ATArray, Single): PrivateScope, Public, Static, HideBySig
    ProdSince(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
Struct AmiBroker.CompositeField: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.CompositeField Open = 0 : Public, Static, Literal, HasDefault
    AmiBroker.CompositeField High = 1 : Public, Static, Literal, HasDefault
    AmiBroker.CompositeField Low = 2 : Public, Static, Literal, HasDefault
    AmiBroker.CompositeField Close = 3 : Public, Static, Literal, HasDefault
    AmiBroker.CompositeField Volume = 4 : Public, Static, Literal, HasDefault
    AmiBroker.CompositeField OpenInt = 5 : Public, Static, Literal, HasDefault
    AmiBroker.CompositeField Aux1 = 6 : Public, Static, Literal, HasDefault
    AmiBroker.CompositeField Aux2 = 7 : Public, Static, Literal, HasDefault
    AmiBroker.CompositeField All = 8 : Public, Static, Literal, HasDefault
Struct AmiBroker.CompositeMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.CompositeMode Defaults = 7 : Public, Static, Literal, HasDefault
    AmiBroker.CompositeMode DeleteValues = 1 : Public, Static, Literal, HasDefault
    AmiBroker.CompositeMode AddToGroup253 = 2 : Public, Static, Literal, HasDefault
    AmiBroker.CompositeMode TimeStamp = 4 : Public, Static, Literal, HasDefault
    AmiBroker.CompositeMode EnableInBacktest = 8 : Public, Static, Literal, HasDefault
    AmiBroker.CompositeMode EnableInExplore = 16 : Public, Static, Literal, HasDefault
    AmiBroker.CompositeMode ResetValues = 32 : Public, Static, Literal, HasDefault
    AmiBroker.CompositeMode EnableInPortfolio = 64 : Public, Static, Literal, HasDefault
    AmiBroker.CompositeMode EnableInIndicator = 128 : Public, Static, Literal, HasDefault
    AmiBroker.CompositeMode Normalize = 256 : Public, Static, Literal, HasDefault
Class AmiBroker.AFComposite: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    AddToComposite(ATArray, String, CompositeField): PrivateScope, Public, Static, HideBySig
    AddToComposite(ATArray, String, CompositeField, CompositeMode): PrivateScope, Public, Static, HideBySig
    AddToComposite(ATArray, String, String): PrivateScope, Public, Static, HideBySig
    AddToComposite(ATArray, String, String, Single): PrivateScope, Public, Static, HideBySig
    ADLine(): PrivateScope, Public, Static, HideBySig
    AdvIssues(): PrivateScope, Public, Static, HideBySig
    AdvVolume(): PrivateScope, Public, Static, HideBySig
    DecIssues(): PrivateScope, Public, Static, HideBySig
    DecVolume(): PrivateScope, Public, Static, HideBySig
    Trin(): PrivateScope, Public, Static, HideBySig
    UncIssues(): PrivateScope, Public, Static, HideBySig
    UncVolume(): PrivateScope, Public, Static, HideBySig
Struct AmiBroker.DateTimeFormat: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.DateTimeFormat DateTimeToDateNum = 0 : Public, Static, Literal, HasDefault
    AmiBroker.DateTimeFormat DateTimeToTimeNum = 1 : Public, Static, Literal, HasDefault
    AmiBroker.DateTimeFormat DateNumAndTimeNumToDateTime = 2 : Public, Static, Literal, HasDefault
    AmiBroker.DateTimeFormat DateTimeToSeconds = 3 : Public, Static, Literal, HasDefault
    AmiBroker.DateTimeFormat DateTimeToMinutes = 4 : Public, Static, Literal, HasDefault
    AmiBroker.DateTimeFormat DateTimeToHours = 5 : Public, Static, Literal, HasDefault
    AmiBroker.DateTimeFormat DateTimeToDay = 6 : Public, Static, Literal, HasDefault
    AmiBroker.DateTimeFormat DateTimeToMonth = 7 : Public, Static, Literal, HasDefault
    AmiBroker.DateTimeFormat DateTimeToYear = 8 : Public, Static, Literal, HasDefault
    AmiBroker.DateTimeFormat DateTimeToDayOfWeek = 9 : Public, Static, Literal, HasDefault
    AmiBroker.DateTimeFormat DateTimeToDayOfYear = 10 : Public, Static, Literal, HasDefault
    AmiBroker.DateTimeFormat DateTimeToQuarter = 11 : Public, Static, Literal, HasDefault
Struct AmiBroker.NowFormatNumber: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.NowFormatNumber DateNum = 3 : Public, Static, Literal, HasDefault
    AmiBroker.NowFormatNumber TimeNum = 4 : Public, Static, Literal, HasDefault
    AmiBroker.NowFormatNumber DateTime = 5 : Public, Static, Literal, HasDefault
    AmiBroker.NowFormatNumber Day = 6 : Public, Static, Literal, HasDefault
    AmiBroker.NowFormatNumber Month = 7 : Public, Static, Literal, HasDefault
    AmiBroker.NowFormatNumber Year = 8 : Public, Static, Literal, HasDefault
    AmiBroker.NowFormatNumber DayOfWeek = 9 : Public, Static, Literal, HasDefault
    AmiBroker.NowFormatNumber DayOfYear = 10 : Public, Static, Literal, HasDefault
    AmiBroker.NowFormatNumber UnixTimestamp = 11 : Public, Static, Literal, HasDefault
Struct AmiBroker.DateTimeInterval: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.DateTimeInterval In1Second = 1 : Public, Static, Literal, HasDefault
    AmiBroker.DateTimeInterval In1Minute = 60 : Public, Static, Literal, HasDefault
    AmiBroker.DateTimeInterval In5Minutes = 300 : Public, Static, Literal, HasDefault
    AmiBroker.DateTimeInterval In15Minutes = 900 : Public, Static, Literal, HasDefault
    AmiBroker.DateTimeInterval InHourly = 3600 : Public, Static, Literal, HasDefault
    AmiBroker.DateTimeInterval InDaily = 86400 : Public, Static, Literal, HasDefault
    AmiBroker.DateTimeInterval InWeekly = 432001 : Public, Static, Literal, HasDefault
    AmiBroker.DateTimeInterval InMonthly = 2160001 : Public, Static, Literal, HasDefault
    AmiBroker.DateTimeInterval InQuarterly = 6480004 : Public, Static, Literal, HasDefault
    AmiBroker.DateTimeInterval InYearly = 25920020 : Public, Static, Literal, HasDefault
Struct AmiBroker.NowFormatString: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.NowFormatString DateTimeString = 0 : Public, Static, Literal, HasDefault
    AmiBroker.NowFormatString DateString = 1 : Public, Static, Literal, HasDefault
    AmiBroker.NowFormatString TimeString = 2 : Public, Static, Literal, HasDefault
Struct AmiBroker.LookupMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.LookupMode Exact = 0 : Public, Static, Literal, HasDefault
    AmiBroker.LookupMode Predecessor = -1 : Public, Static, Literal, HasDefault
    AmiBroker.LookupMode PredecessorExceptLast = -2 : Public, Static, Literal, HasDefault
    AmiBroker.LookupMode Successor = 1 : Public, Static, Literal, HasDefault
    AmiBroker.LookupMode SuccessorExceptFirst = 2 : Public, Static, Literal, HasDefault
Class AmiBroker.AFDate: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    BarIndex(): PrivateScope, Public, Static, HideBySig
    BeginValue(ATArray): PrivateScope, Public, Static, HideBySig
    Date(): PrivateScope, Public, Static, HideBySig
    DateNum(): PrivateScope, Public, Static, HideBySig
    DateTime(): PrivateScope, Public, Static, HideBySig
    DateTimeConvert(DateTimeFormat, Single, Single): PrivateScope, Public, Static, HideBySig
    DateTimeConvert(DateTimeFormat, ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    DateTimeConvert(DateTimeFormat, Single): PrivateScope, Public, Static, HideBySig
    DateTimeConvert(DateTimeFormat, ATArray): PrivateScope, Public, Static, HideBySig
    DateTimeConvert(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    DateTimeConvert(Single, ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    DateTimeConvert(Single, Single): PrivateScope, Public, Static, HideBySig
    DateTimeConvert(Single, ATArray): PrivateScope, Public, Static, HideBySig
    Day(): PrivateScope, Public, Static, HideBySig
    DayOfWeek(): PrivateScope, Public, Static, HideBySig
    DayOfYear(): PrivateScope, Public, Static, HideBySig
    DaysSince1900(): PrivateScope, Public, Static, HideBySig
    EndValue(ATArray): PrivateScope, Public, Static, HideBySig
    GetPlaybackDateTime(): PrivateScope, Public, Static, HideBySig
    Hour(): PrivateScope, Public, Static, HideBySig
    Minute(): PrivateScope, Public, Static, HideBySig
    Month(): PrivateScope, Public, Static, HideBySig
    Now(NowFormatNumber): PrivateScope, Public, Static, HideBySig
    Now(NowFormatString): PrivateScope, Public, Static, HideBySig
    Now(): PrivateScope, Public, Static, HideBySig
    NowV(Single): PrivateScope, Public, Static, HideBySig
    Second(): PrivateScope, Public, Static, HideBySig
    TimeNum(): PrivateScope, Public, Static, HideBySig
    Year(): PrivateScope, Public, Static, HideBySig
    DateTimeAdd(Single, Single): PrivateScope, Public, Static, HideBySig
    DateTimeAdd(Single, Single, DateTimeInterval): PrivateScope, Public, Static, HideBySig
    DateTimeAdd(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    DateTimeAdd(ATArray, Single): PrivateScope, Public, Static, HideBySig
    DateTimeAdd(ATArray, Single, DateTimeInterval): PrivateScope, Public, Static, HideBySig
    DateTimeAdd(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    DateTimeDiff(Single, Single): PrivateScope, Public, Static, HideBySig
    DateTimeDiff(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    DateTimeDiff(Single, ATArray): PrivateScope, Public, Static, HideBySig
    DateTimeDiff(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Lookup(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Lookup(ATArray, Single, LookupMode): PrivateScope, Public, Static, HideBySig
    Lookup(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
Class AmiBroker.AFFile: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    FClose(Single): PrivateScope, Public, Static, HideBySig
    FDelete(String): PrivateScope, Public, Static, HideBySig
    FEof(Single): PrivateScope, Public, Static, HideBySig
    FGets(Single): PrivateScope, Public, Static, HideBySig
    FMkDir(String): PrivateScope, Public, Static, HideBySig
    FOpen(String, String, Single): PrivateScope, Public, Static, HideBySig
    FOpen(String, String): PrivateScope, Public, Static, HideBySig
    FPuts(String, Single): PrivateScope, Public, Static, HideBySig
    FRmDir(String): PrivateScope, Public, Static, HideBySig
    FDir(String, Single): PrivateScope, Public, Static, HideBySig
    FGetCwd(): PrivateScope, Public, Static, HideBySig
    InternetOpenURL(String): PrivateScope, Public, Static, HideBySig (Obsolete)
    InternetOpenURL(String, Single): PrivateScope, Public, Static, HideBySig (Obsolete)
    InternetClose(Single): PrivateScope, Public, Static, HideBySig (Obsolete)
    InternetReadString(Single): PrivateScope, Public, Static, HideBySig (Obsolete)
    InternetSetAgent(String): PrivateScope, Public, Static, HideBySig (Obsolete)
    InternetPostRequest(String, String): PrivateScope, Public, Static, HideBySig (Obsolete)
    InternetPostRequest(String, String, Single): PrivateScope, Public, Static, HideBySig
    InternetGetStatusCode(Single): PrivateScope, Public, Static, HideBySig (Obsolete)
    InternetSetHeaders(String): PrivateScope, Public, Static, HideBySig (Obsolete)
    InternetSetOption(Single, Single): PrivateScope, Public, Static, HideBySig (Obsolete)
Struct AmiBroker.ForeignFixUp: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.ForeignFixUp NotFixed = 0 : Public, Static, Literal, HasDefault
    AmiBroker.ForeignFixUp Default = 1 : Public, Static, Literal, HasDefault
    AmiBroker.ForeignFixUp PrevBar = 2 : Public, Static, Literal, HasDefault
Class AmiBroker.AFForeign: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Foreign(String, String): PrivateScope, Public, Static, HideBySig
    Foreign(String, String, Single): PrivateScope, Public, Static, HideBySig
    Foreign(String, String, ForeignFixUp): PrivateScope, Public, Static, HideBySig
    Foreign(String, StockField): PrivateScope, Public, Static, HideBySig
    Foreign(String, StockField, Single): PrivateScope, Public, Static, HideBySig
    Foreign(String, StockField, ForeignFixUp): PrivateScope, Public, Static, HideBySig
    GetBaseIndex(): PrivateScope, Public, Static, HideBySig
    RelStrength(String, Single): PrivateScope, Public, Static, HideBySig
    RelStrength(String, ForeignFixUp): PrivateScope, Public, Static, HideBySig
    RelStrength(String): PrivateScope, Public, Static, HideBySig
    RestorePriceArrays(Single): PrivateScope, Public, Static, HideBySig
    RestorePriceArrays(Boolean): PrivateScope, Public, Static, HideBySig
    RestorePriceArrays(): PrivateScope, Public, Static, HideBySig
    SetForeign(String, Single, Single): PrivateScope, Public, Static, HideBySig
    SetForeign(String, Single): PrivateScope, Public, Static, HideBySig
    SetForeign(String, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    SetForeign(String, Boolean): PrivateScope, Public, Static, HideBySig
    SetForeign(String): PrivateScope, Public, Static, HideBySig
Class AmiBroker.AFInd: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    AccDist(): PrivateScope, Public, Static, HideBySig
    Adx(): PrivateScope, Public, Static, HideBySig
    Adx(Single): PrivateScope, Public, Static, HideBySig
    Atr(Single): PrivateScope, Public, Static, HideBySig
    BBandBot(ATArray): PrivateScope, Public, Static, HideBySig
    BBandBot(ATArray, Single): PrivateScope, Public, Static, HideBySig
    BBandBot(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    BBandTop(ATArray): PrivateScope, Public, Static, HideBySig
    BBandTop(ATArray, Single): PrivateScope, Public, Static, HideBySig
    BBandTop(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    Cci(): PrivateScope, Public, Static, HideBySig
    Cci(Single): PrivateScope, Public, Static, HideBySig
    CciA(ATArray): PrivateScope, Public, Static, HideBySig
    CciA(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Chaikin(): PrivateScope, Public, Static, HideBySig
    Chaikin(Single): PrivateScope, Public, Static, HideBySig
    Chaikin(Single, Single): PrivateScope, Public, Static, HideBySig
    Macd(): PrivateScope, Public, Static, HideBySig
    Macd(Single): PrivateScope, Public, Static, HideBySig
    Macd(Single, Single): PrivateScope, Public, Static, HideBySig
    Mdi(): PrivateScope, Public, Static, HideBySig
    Mdi(Single): PrivateScope, Public, Static, HideBySig
    Mfi(): PrivateScope, Public, Static, HideBySig
    Mfi(Single): PrivateScope, Public, Static, HideBySig
    Nvi(): PrivateScope, Public, Static, HideBySig
    Obv(): PrivateScope, Public, Static, HideBySig
    Oscp(Single, Single): PrivateScope, Public, Static, HideBySig
    Oscv(Single, Single): PrivateScope, Public, Static, HideBySig
    Pdi(): PrivateScope, Public, Static, HideBySig
    Pdi(Single): PrivateScope, Public, Static, HideBySig
    Pvi(): PrivateScope, Public, Static, HideBySig
    Rmi(): PrivateScope, Public, Static, HideBySig
    Rmi(Single): PrivateScope, Public, Static, HideBySig
    Rmi(Single, Single): PrivateScope, Public, Static, HideBySig
    Roc(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    Roc(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Roc(ATArray): PrivateScope, Public, Static, HideBySig
    Rsi(): PrivateScope, Public, Static, HideBySig
    Rsi(Single): PrivateScope, Public, Static, HideBySig
    RsiA(ATArray): PrivateScope, Public, Static, HideBySig
    RsiA(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Rwi(Single, Single): PrivateScope, Public, Static, HideBySig
    RwiHi(Single, Single): PrivateScope, Public, Static, HideBySig
    RwiLo(Single, Single): PrivateScope, Public, Static, HideBySig
    Sar(): PrivateScope, Public, Static, HideBySig
    Sar(Single): PrivateScope, Public, Static, HideBySig
    Sar(Single, Single): PrivateScope, Public, Static, HideBySig
    Signal(): PrivateScope, Public, Static, HideBySig
    Signal(Single): PrivateScope, Public, Static, HideBySig
    Signal(Single, Single): PrivateScope, Public, Static, HideBySig
    Signal(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    StochD(): PrivateScope, Public, Static, HideBySig
    StochD(Single): PrivateScope, Public, Static, HideBySig
    StochD(Single, Single): PrivateScope, Public, Static, HideBySig
    StochD(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    StochK(): PrivateScope, Public, Static, HideBySig
    StochK(Single): PrivateScope, Public, Static, HideBySig
    StochK(Single, Single): PrivateScope, Public, Static, HideBySig
    Trix(): PrivateScope, Public, Static, HideBySig
    Trix(Single): PrivateScope, Public, Static, HideBySig
    Ultimate(): PrivateScope, Public, Static, HideBySig
    Ultimate(Single): PrivateScope, Public, Static, HideBySig
    Ultimate(Single, Single): PrivateScope, Public, Static, HideBySig
    Ultimate(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PercentRank(ATArray, Single): PrivateScope, Public, Static, HideBySig
    PercentRank(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
Struct AmiBroker.Category: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.Category Market = 0 : Public, Static, Literal, HasDefault
    AmiBroker.Category Group = 1 : Public, Static, Literal, HasDefault
    AmiBroker.Category Sector = 2 : Public, Static, Literal, HasDefault
    AmiBroker.Category Industry = 3 : Public, Static, Literal, HasDefault
    AmiBroker.Category Watchlist = 4 : Public, Static, Literal, HasDefault
    AmiBroker.Category Favorite = 5 : Public, Static, Literal, HasDefault
    AmiBroker.Category Index = 6 : Public, Static, Literal, HasDefault
    AmiBroker.Category Gics = 7 : Public, Static, Literal, HasDefault
    AmiBroker.Category Icb = 8 : Public, Static, Literal, HasDefault
    AmiBroker.Category All = 99 : Public, Static, Literal, HasDefault
Struct AmiBroker.CategoryGetSymbolsMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.CategoryGetSymbolsMode Ticker = 0 : Public, Static, Literal, HasDefault
    AmiBroker.CategoryGetSymbolsMode FullName = 1 : Public, Static, Literal, HasDefault
Class AmiBroker.AFInfo: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    CategoryAddSymbol(String, Category, Int32): PrivateScope, Public, Static, HideBySig
    CategoryAddSymbol(String, Single, Single): PrivateScope, Public, Static, HideBySig
    CategoryFind(String, Category): PrivateScope, Public, Static, HideBySig
    CategoryFind(String, Single): PrivateScope, Public, Static, HideBySig
    CategoryGetName(Category, Int32): PrivateScope, Public, Static, HideBySig
    CategoryGetName(Single, Single): PrivateScope, Public, Static, HideBySig
    CategoryGetSymbols(Category, Int32, CategoryGetSymbolsMode): PrivateScope, Public, Static, HideBySig
    CategoryGetSymbols(Category, Int32, Single): PrivateScope, Public, Static, HideBySig
    CategoryGetSymbols(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    CategoryGetSymbols(Category, Int32): PrivateScope, Public, Static, HideBySig
    CategoryGetSymbols(Single, Single): PrivateScope, Public, Static, HideBySig
    CategoryRemoveSymbol(String, Category, Int32): PrivateScope, Public, Static, HideBySig
    CategoryRemoveSymbol(String, Single, Single): PrivateScope, Public, Static, HideBySig
    CategorySetName(String, Category, Int32): PrivateScope, Public, Static, HideBySig
    CategorySetName(String, Single, Single): PrivateScope, Public, Static, HideBySig
    FullName(): PrivateScope, Public, Static, HideBySig
    GetDatabaseName(): PrivateScope, Public, Static, HideBySig
    GetFnData(String): PrivateScope, Public, Static, HideBySig
    GetFnDataV(String): PrivateScope, Public, Static, HideBySig
    GroupId(): PrivateScope, Public, Static, HideBySig
    GroupName(): PrivateScope, Public, Static, HideBySig
    IndustryId(): PrivateScope, Public, Static, HideBySig
    IndustryName(): PrivateScope, Public, Static, HideBySig
    InWatchList(Single): PrivateScope, Public, Static, HideBySig
    InWatchListName(String): PrivateScope, Public, Static, HideBySig
    IsContinuous(): PrivateScope, Public, Static, HideBySig
    IsFavorite(): PrivateScope, Public, Static, HideBySig
    IsIndex(): PrivateScope, Public, Static, HideBySig
    MarketId(): PrivateScope, Public, Static, HideBySig
    MarketName(): PrivateScope, Public, Static, HideBySig
    Name(): PrivateScope, Public, Static, HideBySig
    SectorId(): PrivateScope, Public, Static, HideBySig
    SectorName(): PrivateScope, Public, Static, HideBySig
    GicsId(Single): PrivateScope, Public, Static, HideBySig
    InGics(String): PrivateScope, Public, Static, HideBySig
    IcbId(Single): PrivateScope, Public, Static, HideBySig
    InIcb(String): PrivateScope, Public, Static, HideBySig
    CategoryCreate(String, Single): PrivateScope, Public, Static, HideBySig
    CategoryCreate(String, Category): PrivateScope, Public, Static, HideBySig
    GetFnDataForeign(String, String): PrivateScope, Public, Static, HideBySig
Struct AmiBroker.Action: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.Action Indicator = 1 : Public, Static, Literal, HasDefault
    AmiBroker.Action Commentary = 2 : Public, Static, Literal, HasDefault
    AmiBroker.Action Scan = 3 : Public, Static, Literal, HasDefault
    AmiBroker.Action Explore = 4 : Public, Static, Literal, HasDefault
    AmiBroker.Action Backtest = 5 : Public, Static, Literal, HasDefault
    AmiBroker.Action Portfolio = 6 : Public, Static, Literal, HasDefault
Struct AmiBroker.ActionEx: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.ActionEx Indicator = 1 : Public, Static, Literal, HasDefault
    AmiBroker.ActionEx Commentary = 2 : Public, Static, Literal, HasDefault
    AmiBroker.ActionEx Scan = 3 : Public, Static, Literal, HasDefault
    AmiBroker.ActionEx Explore = 4 : Public, Static, Literal, HasDefault
    AmiBroker.ActionEx Backtest = 5 : Public, Static, Literal, HasDefault
    AmiBroker.ActionEx Portfolio = 6 : Public, Static, Literal, HasDefault
    AmiBroker.ActionEx AAShowArrows = 10 : Public, Static, Literal, HasDefault
    AmiBroker.ActionEx AAParameters = 11 : Public, Static, Literal, HasDefault
    AmiBroker.ActionEx EditVerifyFormula = 12 : Public, Static, Literal, HasDefault
    AmiBroker.ActionEx OptimizeSetup = 13 : Public, Static, Literal, HasDefault
    AmiBroker.ActionEx OptimizeBacktest = 14 : Public, Static, Literal, HasDefault
    AmiBroker.ActionEx OptimizePortfolio = 15 : Public, Static, Literal, HasDefault
    AmiBroker.ActionEx Tooltip = 16 : Public, Static, Literal, HasDefault
    AmiBroker.ActionEx Interpret = 17 : Public, Static, Literal, HasDefault
    AmiBroker.ActionEx Init = 18 : Public, Static, Literal, HasDefault
    AmiBroker.ActionEx ParamRecompile = 19 : Public, Static, Literal, HasDefault
Struct AmiBroker.MouseMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.MouseMode Compatibility = -1 : Public, Static, Literal, HasDefault
    AmiBroker.MouseMode Values = 0 : Public, Static, Literal, HasDefault
    AmiBroker.MouseMode Pixels = 1 : Public, Static, Literal, HasDefault
Struct AmiBroker.Scale: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.Scale Auto = -1 : Public, Static, Literal, HasDefault
    AmiBroker.Scale Linear = 0 : Public, Static, Literal, HasDefault
    AmiBroker.Scale Logarithmic = 1 : Public, Static, Literal, HasDefault
Struct AmiBroker.BarsRequired: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.BarsRequired NoChange = -1 : Public, Static, Literal, HasDefault
    AmiBroker.BarsRequired All = -2 : Public, Static, Literal, HasDefault
Struct AmiBroker.SummaryRow: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.SummaryRow Total = 1 : Public, Static, Literal, HasDefault
    AmiBroker.SummaryRow Average = 2 : Public, Static, Literal, HasDefault
    AmiBroker.SummaryRow Min = 4 : Public, Static, Literal, HasDefault
    AmiBroker.SummaryRow Max = 8 : Public, Static, Literal, HasDefault
    AmiBroker.SummaryRow Count = 16 : Public, Static, Literal, HasDefault
    AmiBroker.SummaryRow StDev = 32 : Public, Static, Literal, HasDefault
Struct AmiBroker.ExtendLine: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.ExtendLine None = 0 : Public, Static, Literal, HasDefault
    AmiBroker.ExtendLine Right = 1 : Public, Static, Literal, HasDefault
    AmiBroker.ExtendLine Left = 2 : Public, Static, Literal, HasDefault
Class AmiBroker.AFMisc: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String StockNum = stocknum : Public, Static, Literal, HasDefault
    System.String Action = action : Public, Static, Literal, HasDefault
    System.String ActionEx = ActionEx : Public, Static, Literal, HasDefault
    System.String RangeFromDate = rangefromdate : Public, Static, Literal, HasDefault
    System.String RangeToDate = rangetodate : Public, Static, Literal, HasDefault
    System.String RangeFromTime = rangefromtime : Public, Static, Literal, HasDefault
    System.String RangeToTime = rangetotime : Public, Static, Literal, HasDefault
    System.String BarInRange = barinrange : Public, Static, Literal, HasDefault
    System.String BarVisible = barvisible : Public, Static, Literal, HasDefault
    System.String FirstBarInRange = firstbarinrange : Public, Static, Literal, HasDefault
    System.String LastBarInRange = lastbarinrange : Public, Static, Literal, HasDefault
    System.String BuyDelay = buydelay : Public, Static, Literal, HasDefault
    System.String SellDelay = selldelay : Public, Static, Literal, HasDefault
    System.String ShortDelay = shortdelay : Public, Static, Literal, HasDefault
    System.String CoverDelay = coverdelay : Public, Static, Literal, HasDefault
    System.String FirstBarInTest = firstbarintest : Public, Static, Literal, HasDefault
    System.String LastBarInTest = lastbarintest : Public, Static, Literal, HasDefault
    System.String FirstVisibleBar = firstvisiblebar : Public, Static, Literal, HasDefault
    System.String LastVisibleBar = lastvisiblebar : Public, Static, Literal, HasDefault
    System.String FirstVisibleBarIndex = firstvisiblebarindex : Public, Static, Literal, HasDefault
    System.String LastVisibleBarIndex = lastvisiblebarindex : Public, Static, Literal, HasDefault
    System.String RedrawAction = redrawaction : Public, Static, Literal, HasDefault
    System.String PXWidth = pxwidth : Public, Static, Literal, HasDefault
    System.String PXHeight = pxheight : Public, Static, Literal, HasDefault
    System.String AxisMinY = axisminy : Public, Static, Literal, HasDefault
    System.String AxisMaxY = axismaxy : Public, Static, Literal, HasDefault
    System.String PXChartLeft = pxchartleft : Public, Static, Literal, HasDefault
    System.String PXChartTop = pxcharttop : Public, Static, Literal, HasDefault
    System.String PXChartRight = pxchartright : Public, Static, Literal, HasDefault
    System.String PXChartBottom = pxchartbottom : Public, Static, Literal, HasDefault
    System.String PXChartWidth = pxchartwidth : Public, Static, Literal, HasDefault
    System.String PXChartHeight = pxchartheight : Public, Static, Literal, HasDefault
    System.String LastBarEnd = lastbarend : Public, Static, Literal, HasDefault
    System.String LastBarTimeLeft = lastbartimeleft : Public, Static, Literal, HasDefault
    System.String TimeShift = timeshift : Public, Static, Literal, HasDefault
    Single FormatChar = -998 : Public, Static, Literal, HasDefault
    Single FormatDateTime = -999 : Public, Static, Literal, HasDefault
    Single FormatDateTimeISO = -997 : Public, Static, Literal, HasDefault
    Single FormatDateTimeISON = -996 : Public, Static, Literal, HasDefault
    Single FormatDateOnly = -995 : Public, Static, Literal, HasDefault
    Single FormatTimeOnly = -994 : Public, Static, Literal, HasDefault
    System.String ThreadID = threadid : Public, Static, Literal, HasDefault
    System.String Baseinterval = baseinterval : Public, Static, Literal, HasDefault
  Methods:
    AddColumn(ATArray, String, Single, ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    AddColumn(ATArray, String, Single, ATArray): PrivateScope, Public, Static, HideBySig
    AddSummaryRows(SummaryRow, Single, Single[]): PrivateScope, Public, Static, HideBySig
    AddSummaryRows(SummaryRow, Single): PrivateScope, Public, Static, HideBySig
    AddSummaryRows(SummaryRow): PrivateScope, Public, Static, HideBySig
    AddSummaryRows(Single, Single, Single[]): PrivateScope, Public, Static, HideBySig
    AddSummaryRows(Single, Single): PrivateScope, Public, Static, HideBySig
    AddSummaryRows(Single): PrivateScope, Public, Static, HideBySig
    AddTextColumn(String, String, Single, Color, Color, Single): PrivateScope, Public, Static, HideBySig
    AddTextColumn(String, String, Single, Color, Color): PrivateScope, Public, Static, HideBySig
    AddTextColumn(String, String, Single, Color): PrivateScope, Public, Static, HideBySig
    AddTextColumn(String, String, Single, ATArray, ATArray, Single): PrivateScope, Public, Static, HideBySig
    AddTextColumn(String, String, Single, ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    AddTextColumn(String, String, Single, ATArray): PrivateScope, Public, Static, HideBySig
    AddTextColumn(String, String, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    AddTextColumn(String, String, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    AddTextColumn(String, String, Single, Single): PrivateScope, Public, Static, HideBySig
    AddTextColumn(String, String, Single): PrivateScope, Public, Static, HideBySig
    AddTextColumn(String, String): PrivateScope, Public, Static, HideBySig
    SetSortColumns(Single, Single, Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    SetSortColumns(Single, Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    SetSortColumns(Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    SetSortColumns(Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    SetSortColumns(Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    SetSortColumns(Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    SetSortColumns(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    SetSortColumns(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    SetSortColumns(Single, Single): PrivateScope, Public, Static, HideBySig
    SetSortColumns(Single): PrivateScope, Public, Static, HideBySig
    AddRankColumn(): PrivateScope, Public, Static, HideBySig
    AddRow(String): PrivateScope, Public, Static, HideBySig
    EncodeColor(Color): PrivateScope, Public, Static, HideBySig
    EncodeColor(Single): PrivateScope, Public, Static, HideBySig
    EncodeColor(): PrivateScope, Public, Static, HideBySig
    GetPriceStyle(): PrivateScope, Public, Static, HideBySig
    LineArray(Single, Single, Single, Single, ExtendLine, Boolean): PrivateScope, Public, Static, HideBySig
    LineArray(Single, Single, Single, Single, ExtendLine): PrivateScope, Public, Static, HideBySig
    LineArray(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    LineArray(Single, Single, Single, Single, Single, Boolean): PrivateScope, Public, Static, HideBySig
    LineArray(Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    XYChartSetAxis(String, String, String, Single): PrivateScope, Public, Static, HideBySig
    XYChartSetAxis(String, String, String): PrivateScope, Public, Static, HideBySig
    XYChartAddPoint(String, String, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    XYChartAddPoint(String, String, Single, Single, Color, Color): PrivateScope, Public, Static, HideBySig
    XYChartAddPoint(String, String, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    XYChartAddPoint(String, String, Single, Single, Color): PrivateScope, Public, Static, HideBySig
    EnableTextOutput(Single): PrivateScope, Public, Static, HideBySig
    ClipboardGet(): PrivateScope, Public, Static, HideBySig
    ClipboardSet(String): PrivateScope, Public, Static, HideBySig
    WriteIf(Boolean, String, String): PrivateScope, Public, Static, HideBySig
    WriteIf(Single, String, String): PrivateScope, Public, Static, HideBySig
    WriteIf(ATArray, String, String): PrivateScope, Public, Static, HideBySig
    SectionName(): PrivateScope, Public, Static, HideBySig
    SectionBegin(String): PrivateScope, Public, Static, HideBySig
    SectionEnd(): PrivateScope, Public, Static, HideBySig
    DefaultName(): PrivateScope, Public, Static, HideBySig
    ParamValues(): PrivateScope, Public, Static, HideBySig
    Error(String): PrivateScope, Public, Static, HideBySig
    GetFormulaPath(): PrivateScope, Public, Static, HideBySig
    NullCount(ATArray, Single): PrivateScope, Public, Static, HideBySig
    NullCount(ATArray): PrivateScope, Public, Static, HideBySig
    SparseCompress(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    SparseExpand(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    VoiceCount(): PrivateScope, Public, Static, HideBySig
    VoiceSelect(Single): PrivateScope, Public, Static, HideBySig
    AddMultiTextColumn(ATArray, String, String, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    AddMultiTextColumn(ATArray, String, String, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    AddMultiTextColumn(ATArray, String, String, Single, Single): PrivateScope, Public, Static, HideBySig
    AddMultiTextColumn(ATArray, String, String, Single): PrivateScope, Public, Static, HideBySig
    AddMultiTextColumn(ATArray, String, String): PrivateScope, Public, Static, HideBySig
    AddMultiTextColumn(ATArray, String, String, Single, Color, Color, Single): PrivateScope, Public, Static, HideBySig
    AddMultiTextColumn(ATArray, String, String, Single, Color, Color): PrivateScope, Public, Static, HideBySig
    AddMultiTextColumn(ATArray, String, String, Single, Color): PrivateScope, Public, Static, HideBySig
    AddMultiTextColumn(ATArray, String, String, Single, ATArray, ATArray, Single): PrivateScope, Public, Static, HideBySig
    AddMultiTextColumn(ATArray, String, String, Single, ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    AddMultiTextColumn(ATArray, String, String, Single, ATArray): PrivateScope, Public, Static, HideBySig
    GetExtraDataForeign(String, String): PrivateScope, Public, Static, HideBySig
    GetLastOSError(): PrivateScope, Public, Static, HideBySig
    VoiceSetRate(Single): PrivateScope, Public, Static, HideBySig
    VoiceSetVolume(Single): PrivateScope, Public, Static, HideBySig
    VoiceWaitUntilDone(Single): PrivateScope, Public, Static, HideBySig
    FindIndex(ATArray, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    FindIndex(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    FindIndex(ATArray, Single): PrivateScope, Public, Static, HideBySig
    StaticVarGet(String): PrivateScope, Public, Static, HideBySig
    StaticVarGet(String, Boolean): PrivateScope, Public, Static, HideBySig
    StaticVarGetText(String): PrivateScope, Public, Static, HideBySig
    StaticVarSet(String, Single): PrivateScope, Public, Static, HideBySig
    StaticVarSet(String, ATArray): PrivateScope, Public, Static, HideBySig
    StaticVarSet(String, ATMatrix): PrivateScope, Public, Static, HideBySig
    StaticVarSet(String, ATVar): PrivateScope, Public, Static, HideBySig
    StaticVarSet(String, ATVar, Single): PrivateScope, Public, Static, HideBySig
    StaticVarSet(String, ATVar, Single, Single): PrivateScope, Public, Static, HideBySig
    StaticVarSetText(String, String, Single): PrivateScope, Public, Static, HideBySig
    StaticVarSetText(String, String): PrivateScope, Public, Static, HideBySig
    StaticVarRemove(String): PrivateScope, Public, Static, HideBySig
    StaticVarCount(): PrivateScope, Public, Static, HideBySig
    StaticVarCompareExchange(String, Single, Single): PrivateScope, Public, Static, HideBySig
    StaticVarGenerateRanks(String, String, Single, Single): PrivateScope, Public, Static, HideBySig
    StaticVarGetRankedSymbols(String, String, Single): PrivateScope, Public, Static, HideBySig
    StaticVarAdd(String, ATVar): PrivateScope, Public, Static, HideBySig
    StaticVarAdd(String, ATVar, Single): PrivateScope, Public, Static, HideBySig
    StaticVarAdd(String, ATVar, Single, Single): PrivateScope, Public, Static, HideBySig
    VarGet(String): PrivateScope, Public, Static, HideBySig (Obsolete)
    VarGetText(String): PrivateScope, Public, Static, HideBySig (Obsolete)
    VarSet(String, ATVar): PrivateScope, Public, Static, HideBySig (Obsolete)
    VarSet(String, Single): PrivateScope, Public, Static, HideBySig (Obsolete)
    VarSet(String, ATArray): PrivateScope, Public, Static, HideBySig (Obsolete)
    VarSetText(String, String): PrivateScope, Public, Static, HideBySig (Obsolete)
    Nz(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Nz(ATArray): PrivateScope, Public, Static, HideBySig
    Nz(Single, Single): PrivateScope, Public, Static, HideBySig
    Nz(Single): PrivateScope, Public, Static, HideBySig
    IsFinite(ATArray): PrivateScope, Public, Static, HideBySig
    IsFinite(Single): PrivateScope, Public, Static, HideBySig
    IsNull(ATMatrix): PrivateScope, Public, Static, HideBySig
    IsNull(ATArray): PrivateScope, Public, Static, HideBySig
    IsNull(Single): PrivateScope, Public, Static, HideBySig
    IsNaN(ATArray): PrivateScope, Public, Static, HideBySig
    IsNaN(Single): PrivateScope, Public, Static, HideBySig
    IsTrue(ATArray): PrivateScope, Public, Static, HideBySig
    IsTrue(Single): PrivateScope, Public, Static, HideBySig
    AlmostEqual(ATArray, ATArray, Single): PrivateScope, Public, Static, HideBySig
    AlmostEqual(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    AlmostEqual(Single, ATArray, Single): PrivateScope, Public, Static, HideBySig
    AlmostEqual(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    AlmostEqual(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    AlmostEqual(ATArray, Single): PrivateScope, Public, Static, HideBySig
    AlmostEqual(Single, ATArray): PrivateScope, Public, Static, HideBySig
    AlmostEqual(Single, Single): PrivateScope, Public, Static, HideBySig
    Status(String): PrivateScope, Public, Static, HideBySig (Obsolete)
    StatusAction(): PrivateScope, Public, Static, HideBySig
    StatusActionEx(): PrivateScope, Public, Static, HideBySig
    StatusV(String): PrivateScope, Public, Static, HideBySig
    StatusA(String): PrivateScope, Public, Static, HideBySig (Obsolete)
    Study(String): PrivateScope, Public, Static, HideBySig
    Study(String, Single): PrivateScope, Public, Static, HideBySig
    Study(String, Single, Scale): PrivateScope, Public, Static, HideBySig
    Study(String, Single, Single): PrivateScope, Public, Static, HideBySig
    Version(Single): PrivateScope, Public, Static, HideBySig
    Version(): PrivateScope, Public, Static, HideBySig
    GetChartId(): PrivateScope, Public, Static, HideBySig
    GetPerformanceCounter(): PrivateScope, Public, Static, HideBySig
    GetPerformanceCounter(Boolean): PrivateScope, Public, Static, HideBySig
    GetPerformanceCounter(Single): PrivateScope, Public, Static, HideBySig
    GetRTData(String): PrivateScope, Public, Static, HideBySig
    GetRTDataForeign(String, String): PrivateScope, Public, Static, HideBySig
    GetExtraData(String): PrivateScope, Public, Static, HideBySig
    PopupWindow(String, String, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PopupWindow(String, String, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PopupWindow(String, String, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PopupWindow(String, String, Single): PrivateScope, Public, Static, HideBySig
    PopupWindow(String, String): PrivateScope, Public, Static, HideBySig
    Say(String, Boolean): PrivateScope, Public, Static, HideBySig
    Say(String): PrivateScope, Public, Static, HideBySig
    SetBarsRequired(): PrivateScope, Public, Static, HideBySig
    SetBarsRequired(Single): PrivateScope, Public, Static, HideBySig
    SetBarsRequired(Single, Single): PrivateScope, Public, Static, HideBySig
    SetBarsRequired(BarsRequired): PrivateScope, Public, Static, HideBySig
    SetBarsRequired(BarsRequired, BarsRequired): PrivateScope, Public, Static, HideBySig
    SelectedValue(ATArray): PrivateScope, Public, Static, HideBySig
    RequestTimedRefresh(Single, Boolean): PrivateScope, Public, Static, HideBySig
    RequestTimedRefresh(Single): PrivateScope, Public, Static, HideBySig
    GetCursorMouseButtons(): PrivateScope, Public, Static, HideBySig
    GetCursorXPosition(): PrivateScope, Public, Static, HideBySig
    GetCursorXPosition(Single): PrivateScope, Public, Static, HideBySig
    GetCursorXPosition(MouseMode): PrivateScope, Public, Static, HideBySig
    GetCursorYPosition(MouseMode): PrivateScope, Public, Static, HideBySig
    GetCursorYPosition(Single): PrivateScope, Public, Static, HideBySig
    GetCursorYPosition(): PrivateScope, Public, Static, HideBySig
    _Trace(String): PrivateScope, Public, Static, HideBySig (Obsolete)
    Trace(String): PrivateScope, Public, Static, HideBySig
    Tracef(String): PrivateScope, Public, Static, HideBySig
    Tracef(String, ATVar): PrivateScope, Public, Static, HideBySig
    Tracef(String, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    Tracef(String, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    Tracef(String, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    Tracef(String, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    Tracef(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    Tracef(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    Tracef(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    Tracef(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    Tracef(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    Tracef(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    Tracef(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    Tracef(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    Tracef(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    Tracef(String, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar, ATVar): PrivateScope, Public, Static, HideBySig
    FirstVisibleValue(ATArray): PrivateScope, Public, Static, HideBySig
    LastVisibleValue(ATArray): PrivateScope, Public, Static, HideBySig
    LowestVisibleValue(ATArray): PrivateScope, Public, Static, HideBySig
    HighestVisibleValue(ATArray): PrivateScope, Public, Static, HideBySig
    PlaySound(String): PrivateScope, Public, Static, HideBySig
    ShellExecute(String, String, String): PrivateScope, Public, Static, HideBySig
    ShellExecute(String, String, String, Single): PrivateScope, Public, Static, HideBySig
    GetAsyncKeyState(Single): PrivateScope, Public, Static, HideBySig
    NoteGet(String): PrivateScope, Public, Static, HideBySig
    NoteSet(String, String): PrivateScope, Public, Static, HideBySig
    AddColumn(ATArray, String, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    AddColumn(ATArray, String, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    AddColumn(ATArray, String, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    AddColumn(ATArray, String, Single, Single): PrivateScope, Public, Static, HideBySig
    AddColumn(ATArray, String, Single): PrivateScope, Public, Static, HideBySig
    AddColumn(ATArray, String): PrivateScope, Public, Static, HideBySig
    AddColumn(ATArray, String, Single, Color, Color, Single, Single): PrivateScope, Public, Static, HideBySig
    AddColumn(ATArray, String, Single, Color, Color, Single): PrivateScope, Public, Static, HideBySig
    AddColumn(ATArray, String, Single, Color, Color): PrivateScope, Public, Static, HideBySig
    AddColumn(ATArray, String, Single, Color): PrivateScope, Public, Static, HideBySig
    AddColumn(ATArray, String, Single, ATArray, ATArray, Single, ATArray): PrivateScope, Public, Static, HideBySig
    AddColumn(ATArray, String, Single, ATArray, ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    AddColumn(ATArray, String, Single, ATArray, ATArray, Single): PrivateScope, Public, Static, HideBySig
Class AmiBroker.AFMath: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Abs(ATArray): PrivateScope, Public, Static, HideBySig
    Abs(Single): PrivateScope, Public, Static, HideBySig
    Acos(ATArray): PrivateScope, Public, Static, HideBySig
    Acos(Single): PrivateScope, Public, Static, HideBySig
    Asin(ATArray): PrivateScope, Public, Static, HideBySig
    Asin(Single): PrivateScope, Public, Static, HideBySig
    Atan(ATArray): PrivateScope, Public, Static, HideBySig
    Atan(Single): PrivateScope, Public, Static, HideBySig
    Atan2(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    Atan2(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Atan2(Single, ATArray): PrivateScope, Public, Static, HideBySig
    Atan2(Single, Single): PrivateScope, Public, Static, HideBySig
    Ceil(ATArray): PrivateScope, Public, Static, HideBySig
    Ceil(Single): PrivateScope, Public, Static, HideBySig
    Cos(ATArray): PrivateScope, Public, Static, HideBySig
    Cos(Single): PrivateScope, Public, Static, HideBySig
    Cosh(ATArray): PrivateScope, Public, Static, HideBySig
    Cosh(Single): PrivateScope, Public, Static, HideBySig
    Exp(ATArray): PrivateScope, Public, Static, HideBySig
    Exp(Single): PrivateScope, Public, Static, HideBySig
    Floor(ATArray): PrivateScope, Public, Static, HideBySig
    Floor(Single): PrivateScope, Public, Static, HideBySig
    Frac(ATArray): PrivateScope, Public, Static, HideBySig
    Frac(Single): PrivateScope, Public, Static, HideBySig
    Int(ATArray): PrivateScope, Public, Static, HideBySig
    Int(Single): PrivateScope, Public, Static, HideBySig
    Log(ATArray): PrivateScope, Public, Static, HideBySig
    Log(Single): PrivateScope, Public, Static, HideBySig
    Log10(ATArray): PrivateScope, Public, Static, HideBySig
    Log10(Single): PrivateScope, Public, Static, HideBySig
    Max(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    Max(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Max(Single, ATArray): PrivateScope, Public, Static, HideBySig
    Max(Single, Single): PrivateScope, Public, Static, HideBySig
    Min(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    Min(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Min(Single, ATArray): PrivateScope, Public, Static, HideBySig
    Min(Single, Single): PrivateScope, Public, Static, HideBySig
    Power(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    Power(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Power(Single, ATArray): PrivateScope, Public, Static, HideBySig
    Power(Single, Single): PrivateScope, Public, Static, HideBySig
    Round(ATArray): PrivateScope, Public, Static, HideBySig
    Round(Single): PrivateScope, Public, Static, HideBySig
    Prec(ATArray, Int32): PrivateScope, Public, Static, HideBySig
    Prec(Single, Int32): PrivateScope, Public, Static, HideBySig
    Sign(ATArray): PrivateScope, Public, Static, HideBySig
    Sign(Single): PrivateScope, Public, Static, HideBySig
    Sin(ATArray): PrivateScope, Public, Static, HideBySig
    Sin(Single): PrivateScope, Public, Static, HideBySig
    Sinh(ATArray): PrivateScope, Public, Static, HideBySig
    Sinh(Single): PrivateScope, Public, Static, HideBySig
    Sqrt(ATArray): PrivateScope, Public, Static, HideBySig
    Sqrt(Single): PrivateScope, Public, Static, HideBySig
    Tan(ATArray): PrivateScope, Public, Static, HideBySig
    Tan(Single): PrivateScope, Public, Static, HideBySig
    Tanh(ATArray): PrivateScope, Public, Static, HideBySig
    Tanh(Single): PrivateScope, Public, Static, HideBySig
    Matrix(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Matrix(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Matrix(Single, Single): PrivateScope, Public, Static, HideBySig
    MxGetSize(ATMatrix, Single): PrivateScope, Public, Static, HideBySig
    MxIdentity(Single): PrivateScope, Public, Static, HideBySig
    MxTranspose(ATMatrix): PrivateScope, Public, Static, HideBySig
    MxDet(ATMatrix): PrivateScope, Public, Static, HideBySig
    MxDet(ATMatrix, Single): PrivateScope, Public, Static, HideBySig
    MxFromString(String): PrivateScope, Public, Static, HideBySig
    MxGetBlock(ATMatrix, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    MxGetBlock(ATMatrix, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    MxInverse(ATMatrix): PrivateScope, Public, Static, HideBySig
    MxSetBlock(ATMatrix, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    MxSetBlock(ATMatrix, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    MxSetBlock(ATMatrix, Single, Single, Single, Single, ATArray): PrivateScope, Public, Static, HideBySig
    MxSolve(ATMatrix, ATMatrix): PrivateScope, Public, Static, HideBySig
    MxSort(ATMatrix): PrivateScope, Public, Static, HideBySig
    MxSort(ATMatrix, Single): PrivateScope, Public, Static, HideBySig
    MxSort(ATMatrix, Single, Single): PrivateScope, Public, Static, HideBySig
    MxSortRows(ATMatrix): PrivateScope, Public, Static, HideBySig
    MxSortRows(ATMatrix, Single): PrivateScope, Public, Static, HideBySig
    MxSortRows(ATMatrix, Single, Single): PrivateScope, Public, Static, HideBySig
    MxSortRows(ATMatrix, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    MxSortRows(ATMatrix, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    MxToString(ATMatrix): PrivateScope, Public, Static, HideBySig
    PriceVolDistribution(ATArray, ATArray, ATArray, Single): PrivateScope, Public, Static, HideBySig
    PriceVolDistribution(ATArray, ATArray, ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    PriceVolDistribution(ATArray, ATArray, ATArray, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PriceVolDistribution(ATArray, ATArray, ATArray, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    MxSum(ATMatrix): PrivateScope, Public, Static, HideBySig
    Remap(Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Remap(ATArray, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Erf(ATArray): PrivateScope, Public, Static, HideBySig
    Erf(Single): PrivateScope, Public, Static, HideBySig
    InvErf(ATArray): PrivateScope, Public, Static, HideBySig
    InvErf(Single): PrivateScope, Public, Static, HideBySig
    SafeDivide(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    SafeDivide(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    SafeDivide(Single, ATArray, Single): PrivateScope, Public, Static, HideBySig
    SafeDivide(ATArray, ATArray, Single): PrivateScope, Public, Static, HideBySig
    MxCopy(ATMatrix, ATMatrix, Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    MxCopy(ATMatrix, ATMatrix, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    MxCopy(ATMatrix, ATMatrix, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    MxCopy(ATMatrix, ATMatrix, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    MxCopy(ATMatrix, ATMatrix, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
Class AmiBroker.AFHL: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Hhv(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Hhv(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    HhvBars(ATArray, Single): PrivateScope, Public, Static, HideBySig
    HhvBars(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    Highest(ATArray): PrivateScope, Public, Static, HideBySig
    HighestBars(ATArray): PrivateScope, Public, Static, HideBySig
    HighestSince(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    HighestSince(ATArray, ATArray, Single): PrivateScope, Public, Static, HideBySig
    HighestSinceBars(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    HighestSinceBars(ATArray, ATArray, Single): PrivateScope, Public, Static, HideBySig
    Llv(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Llv(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    LlvBars(ATArray, Single): PrivateScope, Public, Static, HideBySig
    LlvBars(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    Lowest(ATArray): PrivateScope, Public, Static, HideBySig
    LowestBars(ATArray): PrivateScope, Public, Static, HideBySig
    LowestSince(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    LowestSince(ATArray, ATArray, Single): PrivateScope, Public, Static, HideBySig
    LowestSinceBars(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    LowestSinceBars(ATArray, ATArray, Single): PrivateScope, Public, Static, HideBySig
Class AmiBroker.AFStat: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Correlation(ATArray, ATArray, Single): PrivateScope, Public, Static, HideBySig
    LinearReg(ATArray, Single): PrivateScope, Public, Static, HideBySig
    LinearReg(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    LinRegIntercept(ATArray, Single): PrivateScope, Public, Static, HideBySig
    LinRegIntercept(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    LinRegSlope(ATArray, Single): PrivateScope, Public, Static, HideBySig
    LinRegSlope(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    Median(ATArray, Single): PrivateScope, Public, Static, HideBySig
    MTRandomA(Single): PrivateScope, Public, Static, HideBySig
    MTRandomA(): PrivateScope, Public, Static, HideBySig
    MTRandom(Single): PrivateScope, Public, Static, HideBySig
    MTRandom(): PrivateScope, Public, Static, HideBySig
    Percentile(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    Percentile(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Random(Single): PrivateScope, Public, Static, HideBySig
    Random(): PrivateScope, Public, Static, HideBySig
    StdErr(ATArray, Single): PrivateScope, Public, Static, HideBySig
    StdErr(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    StDev(ATArray, Single): PrivateScope, Public, Static, HideBySig
    StDev(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    StDev(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    StDev(ATArray, ATArray, Single): PrivateScope, Public, Static, HideBySig
    Tsf(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Tsf(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    NormDist(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    NormDist(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    NormDist(Single, Single): PrivateScope, Public, Static, HideBySig
    NormDist(Single): PrivateScope, Public, Static, HideBySig
    Skewness(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    Skewness(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Kurtosis(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    Kurtosis(ATArray, Single): PrivateScope, Public, Static, HideBySig
Struct AmiBroker.ChartOptionMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.ChartOptionMode Default = 0 : Public, Static, Literal, HasDefault
    AmiBroker.ChartOptionMode OverWrite = 1 : Public, Static, Literal, HasDefault
    AmiBroker.ChartOptionMode Set = 2 : Public, Static, Literal, HasDefault
    AmiBroker.ChartOptionMode Reset = 3 : Public, Static, Literal, HasDefault
Struct AmiBroker.ChartOptionFlag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.ChartOptionFlag ShowDates = 2 : Public, Static, Literal, HasDefault
    AmiBroker.ChartOptionFlag Logarithmic = 4 : Public, Static, Literal, HasDefault
    AmiBroker.ChartOptionFlag ShowArrows = 8 : Public, Static, Literal, HasDefault
    AmiBroker.ChartOptionFlag WrapTitle = 16 : Public, Static, Literal, HasDefault
    AmiBroker.ChartOptionFlag HideQuoteMarker = 32 : Public, Static, Literal, HasDefault
    AmiBroker.ChartOptionFlag DisableYAxisCursor = 64 : Public, Static, Literal, HasDefault
    AmiBroker.ChartOptionFlag DisableTooltips = 128 : Public, Static, Literal, HasDefault
Struct AmiBroker.ChartOptionGrid: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.ChartOptionGrid ShowDiv100 = 1 : Public, Static, Literal, HasDefault
    AmiBroker.ChartOptionGrid ShowPercentValues = 2 : Public, Static, Literal, HasDefault
    AmiBroker.ChartOptionGrid ShowDiv1000 = 4 : Public, Static, Literal, HasDefault
    AmiBroker.ChartOptionGrid ShowMargins = 192 : Public, Static, Literal, HasDefault
    AmiBroker.ChartOptionGrid ShowMiddleLines = 256 : Public, Static, Literal, HasDefault
    AmiBroker.ChartOptionGrid Level1 = 32 : Public, Static, Literal, HasDefault
    AmiBroker.ChartOptionGrid Level0 = 256 : Public, Static, Literal, HasDefault
    AmiBroker.ChartOptionGrid Level30 = 1024 : Public, Static, Literal, HasDefault
    AmiBroker.ChartOptionGrid Level70 = 2048 : Public, Static, Literal, HasDefault
    AmiBroker.ChartOptionGrid Level10 = 4096 : Public, Static, Literal, HasDefault
    AmiBroker.ChartOptionGrid Level90 = 8192 : Public, Static, Literal, HasDefault
    AmiBroker.ChartOptionGrid Level50 = 16384 : Public, Static, Literal, HasDefault
    AmiBroker.ChartOptionGrid Level100 = 32768 : Public, Static, Literal, HasDefault
    AmiBroker.ChartOptionGrid Level20 = 65536 : Public, Static, Literal, HasDefault
    AmiBroker.ChartOptionGrid Level80 = 131072 : Public, Static, Literal, HasDefault
Struct AmiBroker.GfxTextAlign: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.GfxTextAlign XCenter = 6 : Public, Static, Literal, HasDefault
    AmiBroker.GfxTextAlign XLeft = 0 : Public, Static, Literal, HasDefault
    AmiBroker.GfxTextAlign XRight = 2 : Public, Static, Literal, HasDefault
    AmiBroker.GfxTextAlign YFontBaseline = 24 : Public, Static, Literal, HasDefault
    AmiBroker.GfxTextAlign YBottom = 8 : Public, Static, Literal, HasDefault
    AmiBroker.GfxTextAlign YTop = 0 : Public, Static, Literal, HasDefault
    AmiBroker.GfxTextAlign UpdateCurrentPosition = 1 : Public, Static, Literal, HasDefault
Struct AmiBroker.GfxOverLayMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.GfxOverLayMode GfxOnTop = 0 : Public, Static, Literal, HasDefault
    AmiBroker.GfxOverLayMode ChartOnTop = 1 : Public, Static, Literal, HasDefault
    AmiBroker.GfxOverLayMode GfxOnly = 2 : Public, Static, Literal, HasDefault
Struct AmiBroker.GfxPenStyle: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.GfxPenStyle Solid = 0 : Public, Static, Literal, HasDefault
    AmiBroker.GfxPenStyle Dash = 1 : Public, Static, Literal, HasDefault
    AmiBroker.GfxPenStyle Dot = 2 : Public, Static, Literal, HasDefault
    AmiBroker.GfxPenStyle DashDot = 3 : Public, Static, Literal, HasDefault
    AmiBroker.GfxPenStyle DashDotDot = 4 : Public, Static, Literal, HasDefault
Struct AmiBroker.GfxDrawTAlign: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.GfxDrawTAlign Bottom = 8 : Public, Static, Literal, HasDefault
    AmiBroker.GfxDrawTAlign Center = 1 : Public, Static, Literal, HasDefault
    AmiBroker.GfxDrawTAlign Ellipses = 32768 : Public, Static, Literal, HasDefault
    AmiBroker.GfxDrawTAlign Expandtabs = 64 : Public, Static, Literal, HasDefault
    AmiBroker.GfxDrawTAlign Left = 0 : Public, Static, Literal, HasDefault
    AmiBroker.GfxDrawTAlign NoClip = 256 : Public, Static, Literal, HasDefault
    AmiBroker.GfxDrawTAlign NoPrefix = 2048 : Public, Static, Literal, HasDefault
    AmiBroker.GfxDrawTAlign Right = 2 : Public, Static, Literal, HasDefault
    AmiBroker.GfxDrawTAlign SingleLine = 32 : Public, Static, Literal, HasDefault
    AmiBroker.GfxDrawTAlign Top = 0 : Public, Static, Literal, HasDefault
    AmiBroker.GfxDrawTAlign VCenter = 4 : Public, Static, Literal, HasDefault
    AmiBroker.GfxDrawTAlign WordBreak = 16 : Public, Static, Literal, HasDefault
Struct AmiBroker.GfxBkMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.GfxBkMode Transparent = 1 : Public, Static, Literal, HasDefault
    AmiBroker.GfxBkMode Opaque = 2 : Public, Static, Literal, HasDefault
Struct AmiBroker.Style: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.Style Line = 1 : Public, Static, Literal, HasDefault
    AmiBroker.Style Histogram = 2 : Public, Static, Literal, HasDefault
    AmiBroker.Style Thick = 4 : Public, Static, Literal, HasDefault
    AmiBroker.Style Dots = 8 : Public, Static, Literal, HasDefault
    AmiBroker.Style NoLine = 16 : Public, Static, Literal, HasDefault
    AmiBroker.Style Dashed = 32 : Public, Static, Literal, HasDefault
    AmiBroker.Style Candle = 64 : Public, Static, Literal, HasDefault
    AmiBroker.Style Bar = 128 : Public, Static, Literal, HasDefault
    AmiBroker.Style NoDraw = 256 : Public, Static, Literal, HasDefault
    AmiBroker.Style Staircase = 512 : Public, Static, Literal, HasDefault
    AmiBroker.Style SwingDots = 1024 : Public, Static, Literal, HasDefault
    AmiBroker.Style NoRescale = 2048 : Public, Static, Literal, HasDefault
    AmiBroker.Style NoLabel = 4096 : Public, Static, Literal, HasDefault
    AmiBroker.Style PointAndFigure = 8192 : Public, Static, Literal, HasDefault
    AmiBroker.Style Area = 16384 : Public, Static, Literal, HasDefault
    AmiBroker.Style OwnScale = 32768 : Public, Static, Literal, HasDefault
    AmiBroker.Style LeftAxisScale = 65536 : Public, Static, Literal, HasDefault
    AmiBroker.Style NoTitle = 131072 : Public, Static, Literal, HasDefault
    AmiBroker.Style Cloud = 262144 : Public, Static, Literal, HasDefault
    AmiBroker.Style ClipMinMax = 524288 : Public, Static, Literal, HasDefault
    AmiBroker.Style Hidden = 2304 : Public, Static, Literal, HasDefault
    AmiBroker.Style Gradient = 16386 : Public, Static, Literal, HasDefault
    AmiBroker.Style BarNoTicks = 640 : Public, Static, Literal, HasDefault
Struct AmiBroker.StyleMask: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.StyleMask All = 8388607 : Public, Static, Literal, HasDefault
    AmiBroker.StyleMask Default = 39204 : Public, Static, Literal, HasDefault
    AmiBroker.StyleMask Price = 39372 : Public, Static, Literal, HasDefault
    AmiBroker.StyleMask Histogram = 55558 : Public, Static, Literal, HasDefault
Struct AmiBroker.Color: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.Color Default = -1 : Public, Static, Literal, HasDefault
    AmiBroker.Color Cycle = -1 : Public, Static, Literal, HasDefault
    AmiBroker.Color Custom1 = 0 : Public, Static, Literal, HasDefault
    AmiBroker.Color Custom2 = 1 : Public, Static, Literal, HasDefault
    AmiBroker.Color Custom3 = 2 : Public, Static, Literal, HasDefault
    AmiBroker.Color Custom4 = 3 : Public, Static, Literal, HasDefault
    AmiBroker.Color Custom5 = 4 : Public, Static, Literal, HasDefault
    AmiBroker.Color Custom6 = 5 : Public, Static, Literal, HasDefault
    AmiBroker.Color Custom7 = 6 : Public, Static, Literal, HasDefault
    AmiBroker.Color Custom8 = 7 : Public, Static, Literal, HasDefault
    AmiBroker.Color Custom9 = 8 : Public, Static, Literal, HasDefault
    AmiBroker.Color Custom10 = 9 : Public, Static, Literal, HasDefault
    AmiBroker.Color Custom11 = 10 : Public, Static, Literal, HasDefault
    AmiBroker.Color Custom12 = 11 : Public, Static, Literal, HasDefault
    AmiBroker.Color Custom13 = 12 : Public, Static, Literal, HasDefault
    AmiBroker.Color Custom14 = 13 : Public, Static, Literal, HasDefault
    AmiBroker.Color Custom15 = 14 : Public, Static, Literal, HasDefault
    AmiBroker.Color Custom16 = 15 : Public, Static, Literal, HasDefault
    AmiBroker.Color Black = 16 : Public, Static, Literal, HasDefault
    AmiBroker.Color Brown = 17 : Public, Static, Literal, HasDefault
    AmiBroker.Color DarkOliveGreen = 18 : Public, Static, Literal, HasDefault
    AmiBroker.Color DarkGreen = 19 : Public, Static, Literal, HasDefault
    AmiBroker.Color DarkTeal = 20 : Public, Static, Literal, HasDefault
    AmiBroker.Color DarkBlue = 21 : Public, Static, Literal, HasDefault
    AmiBroker.Color Indigo = 22 : Public, Static, Literal, HasDefault
    AmiBroker.Color DarkGrey = 23 : Public, Static, Literal, HasDefault
    AmiBroker.Color DarkRed = 24 : Public, Static, Literal, HasDefault
    AmiBroker.Color Orange = 25 : Public, Static, Literal, HasDefault
    AmiBroker.Color DarkYellow = 26 : Public, Static, Literal, HasDefault
    AmiBroker.Color Green = 27 : Public, Static, Literal, HasDefault
    AmiBroker.Color Teal = 28 : Public, Static, Literal, HasDefault
    AmiBroker.Color Blue = 29 : Public, Static, Literal, HasDefault
    AmiBroker.Color BlueGrey = 30 : Public, Static, Literal, HasDefault
    AmiBroker.Color Grey40 = 31 : Public, Static, Literal, HasDefault
    AmiBroker.Color Red = 32 : Public, Static, Literal, HasDefault
    AmiBroker.Color LightOrange = 33 : Public, Static, Literal, HasDefault
    AmiBroker.Color Lime = 34 : Public, Static, Literal, HasDefault
    AmiBroker.Color SeaGreen = 35 : Public, Static, Literal, HasDefault
    AmiBroker.Color Aqua = 36 : Public, Static, Literal, HasDefault
    AmiBroker.Color LightBlue = 37 : Public, Static, Literal, HasDefault
    AmiBroker.Color Violet = 38 : Public, Static, Literal, HasDefault
    AmiBroker.Color Grey50 = 39 : Public, Static, Literal, HasDefault
    AmiBroker.Color Pink = 40 : Public, Static, Literal, HasDefault
    AmiBroker.Color Gold = 41 : Public, Static, Literal, HasDefault
    AmiBroker.Color Yellow = 42 : Public, Static, Literal, HasDefault
    AmiBroker.Color BrightGreen = 43 : Public, Static, Literal, HasDefault
    AmiBroker.Color Turquoise = 44 : Public, Static, Literal, HasDefault
    AmiBroker.Color SkyBlue = 45 : Public, Static, Literal, HasDefault
    AmiBroker.Color Plum = 46 : Public, Static, Literal, HasDefault
    AmiBroker.Color LightGrey = 47 : Public, Static, Literal, HasDefault
    AmiBroker.Color Rose = 48 : Public, Static, Literal, HasDefault
    AmiBroker.Color Tan = 49 : Public, Static, Literal, HasDefault
    AmiBroker.Color LightYellow = 50 : Public, Static, Literal, HasDefault
    AmiBroker.Color PaleGreen = 51 : Public, Static, Literal, HasDefault
    AmiBroker.Color PaleTurquoise = 52 : Public, Static, Literal, HasDefault
    AmiBroker.Color PaleBlue = 53 : Public, Static, Literal, HasDefault
    AmiBroker.Color Lavender = 54 : Public, Static, Literal, HasDefault
    AmiBroker.Color White = 55 : Public, Static, Literal, HasDefault
Struct AmiBroker.Shape: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.Shape None = 0 : Public, Static, Literal, HasDefault
    AmiBroker.Shape UpArrow = 1 : Public, Static, Literal, HasDefault
    AmiBroker.Shape DownArrow = 2 : Public, Static, Literal, HasDefault
    AmiBroker.Shape HollowUpArrow = 3 : Public, Static, Literal, HasDefault
    AmiBroker.Shape HollowDownArrow = 4 : Public, Static, Literal, HasDefault
    AmiBroker.Shape SmallUpTriangle = 5 : Public, Static, Literal, HasDefault
    AmiBroker.Shape SmallDownTriangle = 6 : Public, Static, Literal, HasDefault
    AmiBroker.Shape HollowSmallUpTriangle = 7 : Public, Static, Literal, HasDefault
    AmiBroker.Shape HollowSmallDownTriangle = 8 : Public, Static, Literal, HasDefault
    AmiBroker.Shape UpTriangle = 9 : Public, Static, Literal, HasDefault
    AmiBroker.Shape DownTriangle = 10 : Public, Static, Literal, HasDefault
    AmiBroker.Shape HollowUpTriangle = 11 : Public, Static, Literal, HasDefault
    AmiBroker.Shape HollowDownTriangle = 12 : Public, Static, Literal, HasDefault
    AmiBroker.Shape SmallSquare = 13 : Public, Static, Literal, HasDefault
    AmiBroker.Shape SmallSquareBelow = 13 : Public, Static, Literal, HasDefault
    AmiBroker.Shape SmallSquareAbove = 14 : Public, Static, Literal, HasDefault
    AmiBroker.Shape HollowSmallSquare = 15 : Public, Static, Literal, HasDefault
    AmiBroker.Shape HollowSmallSquareBelow = 15 : Public, Static, Literal, HasDefault
    AmiBroker.Shape HollowSmallSquareAbove = 16 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Square = 17 : Public, Static, Literal, HasDefault
    AmiBroker.Shape SquareBelow = 17 : Public, Static, Literal, HasDefault
    AmiBroker.Shape SquareAbove = 18 : Public, Static, Literal, HasDefault
    AmiBroker.Shape HollowSquare = 19 : Public, Static, Literal, HasDefault
    AmiBroker.Shape HollowSquareBelow = 19 : Public, Static, Literal, HasDefault
    AmiBroker.Shape HollowSquareAbove = 20 : Public, Static, Literal, HasDefault
    AmiBroker.Shape SmallCircle = 21 : Public, Static, Literal, HasDefault
    AmiBroker.Shape SmallCircleBelow = 21 : Public, Static, Literal, HasDefault
    AmiBroker.Shape SmallCircleAbove = 22 : Public, Static, Literal, HasDefault
    AmiBroker.Shape HollowSmallCircle = 23 : Public, Static, Literal, HasDefault
    AmiBroker.Shape HollowSmallCircleBelow = 23 : Public, Static, Literal, HasDefault
    AmiBroker.Shape HollowSmallCircleAbove = 24 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Circle = 25 : Public, Static, Literal, HasDefault
    AmiBroker.Shape CircleBelow = 25 : Public, Static, Literal, HasDefault
    AmiBroker.Shape CircleAbove = 26 : Public, Static, Literal, HasDefault
    AmiBroker.Shape HollowCircle = 27 : Public, Static, Literal, HasDefault
    AmiBroker.Shape HollowCircleBelow = 27 : Public, Static, Literal, HasDefault
    AmiBroker.Shape HollowCircleAbove = 28 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Star = 29 : Public, Static, Literal, HasDefault
    AmiBroker.Shape StarBelow = 29 : Public, Static, Literal, HasDefault
    AmiBroker.Shape StarAbove = 30 : Public, Static, Literal, HasDefault
    AmiBroker.Shape HollowStar = 31 : Public, Static, Literal, HasDefault
    AmiBroker.Shape HollowStarBelow = 31 : Public, Static, Literal, HasDefault
    AmiBroker.Shape HollowStarAbove = 32 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit0 = 33 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit0Below = 33 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit0Above = 34 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit1 = 35 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit1Below = 35 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit1Above = 36 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit2 = 37 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit2Below = 37 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit2Above = 38 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit3 = 39 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit3Below = 39 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit3Above = 40 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit4 = 41 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit4Below = 41 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit4Above = 42 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit5 = 43 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit5Below = 43 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit5Above = 44 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit6 = 45 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit6Below = 45 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit6Above = 46 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit7 = 47 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit7Below = 47 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit7Above = 48 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit8 = 49 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit8Below = 49 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit8Above = 50 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit9 = 51 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit9Below = 51 : Public, Static, Literal, HasDefault
    AmiBroker.Shape Digit9Above = 52 : Public, Static, Literal, HasDefault
    AmiBroker.Shape PositionAbove = 1 : Public, Static, Literal, HasDefault
Struct AmiBroker.VapStyle: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.VapStyle Left = 0 : Public, Static, Literal, HasDefault
    AmiBroker.VapStyle Right = 1 : Public, Static, Literal, HasDefault
    AmiBroker.VapStyle Area = 0 : Public, Static, Literal, HasDefault
    AmiBroker.VapStyle Lines = 2 : Public, Static, Literal, HasDefault
    AmiBroker.VapStyle OnTop = 0 : Public, Static, Literal, HasDefault
    AmiBroker.VapStyle Behind = 8 : Public, Static, Literal, HasDefault
Class AmiBroker.AFPattern: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Fft(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Fft(ATArray): PrivateScope, Public, Static, HideBySig
    GapDown(): PrivateScope, Public, Static, HideBySig
    GapUp(): PrivateScope, Public, Static, HideBySig
    Inside(): PrivateScope, Public, Static, HideBySig
    Outside(): PrivateScope, Public, Static, HideBySig
    Peak(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    Peak(ATArray, Single): PrivateScope, Public, Static, HideBySig
    PeakBars(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    PeakBars(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Trough(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    Trough(ATArray, Single): PrivateScope, Public, Static, HideBySig
    TroughBars(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    TroughBars(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Zig(ATArray, Single): PrivateScope, Public, Static, HideBySig
Struct AmiBroker.TFInterval: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.TFInterval In1Second = 1 : Public, Static, Literal, HasDefault
    AmiBroker.TFInterval In1Minute = 60 : Public, Static, Literal, HasDefault
    AmiBroker.TFInterval In5Minutes = 300 : Public, Static, Literal, HasDefault
    AmiBroker.TFInterval In15Minutes = 900 : Public, Static, Literal, HasDefault
    AmiBroker.TFInterval InHourly = 3600 : Public, Static, Literal, HasDefault
    AmiBroker.TFInterval InDaily = 86400 : Public, Static, Literal, HasDefault
    AmiBroker.TFInterval InWeekly = 432001 : Public, Static, Literal, HasDefault
    AmiBroker.TFInterval InMonthly = 2160001 : Public, Static, Literal, HasDefault
    AmiBroker.TFInterval InQuarterly = 6480004 : Public, Static, Literal, HasDefault
    AmiBroker.TFInterval InYearly = 25920020 : Public, Static, Literal, HasDefault
Struct AmiBroker.TFExpand: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.TFExpand Last = 0 : Public, Static, Literal, HasDefault
    AmiBroker.TFExpand First = 1 : Public, Static, Literal, HasDefault
    AmiBroker.TFExpand Point = 2 : Public, Static, Literal, HasDefault
Struct AmiBroker.TFCompress: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.TFCompress Last = 0 : Public, Static, Literal, HasDefault
    AmiBroker.TFCompress Open = 1 : Public, Static, Literal, HasDefault
    AmiBroker.TFCompress High = 2 : Public, Static, Literal, HasDefault
    AmiBroker.TFCompress Low = 3 : Public, Static, Literal, HasDefault
    AmiBroker.TFCompress Volume = 4 : Public, Static, Literal, HasDefault
Struct AmiBroker.TFMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.TFMode Time = 0 : Public, Static, Literal, HasDefault
    AmiBroker.TFMode NTick = 1 : Public, Static, Literal, HasDefault
    AmiBroker.TFMode NVolume = 2 : Public, Static, Literal, HasDefault
    AmiBroker.TFMode NRangeDollar = 3 : Public, Static, Literal, HasDefault
    AmiBroker.TFMode NRangeTick = 4 : Public, Static, Literal, HasDefault
Class AmiBroker.AFTimeFrame: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Interval(): PrivateScope, Public, Static, HideBySig
    TimeFrameSet(Single): PrivateScope, Public, Static, HideBySig
    TimeFrameSet(TFInterval): PrivateScope, Public, Static, HideBySig
    TimeFrameRestore(): PrivateScope, Public, Static, HideBySig
    TimeFrameRestore(Single): PrivateScope, Public, Static, HideBySig
    TimeFrameMode(TFMode): PrivateScope, Public, Static, HideBySig
    TimeFrameMode(Single): PrivateScope, Public, Static, HideBySig
    TimeFrameExpand(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    TimeFrameExpand(ATArray, Single, TFExpand): PrivateScope, Public, Static, HideBySig
    TimeFrameExpand(ATArray, Single): PrivateScope, Public, Static, HideBySig
    TimeFrameExpand(ATArray, TFInterval, Single): PrivateScope, Public, Static, HideBySig
    TimeFrameExpand(ATArray, TFInterval, TFExpand): PrivateScope, Public, Static, HideBySig
    TimeFrameExpand(ATArray, TFInterval): PrivateScope, Public, Static, HideBySig
    TimeFrameCompress(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    TimeFrameCompress(ATArray, Single, TFCompress): PrivateScope, Public, Static, HideBySig
    TimeFrameCompress(ATArray, Single): PrivateScope, Public, Static, HideBySig
    TimeFrameCompress(ATArray, TFInterval, Single): PrivateScope, Public, Static, HideBySig
    TimeFrameCompress(ATArray, TFInterval, TFCompress): PrivateScope, Public, Static, HideBySig
    TimeFrameCompress(ATArray, TFInterval): PrivateScope, Public, Static, HideBySig
    TimeFrameGetPrice(StockField, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    TimeFrameGetPrice(StockField, Single, Single, TFExpand): PrivateScope, Public, Static, HideBySig
    TimeFrameGetPrice(StockField, Single, Single): PrivateScope, Public, Static, HideBySig
    TimeFrameGetPrice(StockField, Single): PrivateScope, Public, Static, HideBySig
    TimeFrameGetPrice(StockField, TFInterval, Single, Single): PrivateScope, Public, Static, HideBySig
    TimeFrameGetPrice(StockField, TFInterval, Single, TFExpand): PrivateScope, Public, Static, HideBySig
    TimeFrameGetPrice(StockField, TFInterval, Single): PrivateScope, Public, Static, HideBySig
    TimeFrameGetPrice(StockField, TFInterval): PrivateScope, Public, Static, HideBySig
    TimeFrameGetPrice(String, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    TimeFrameGetPrice(String, Single, Single, TFExpand): PrivateScope, Public, Static, HideBySig
    TimeFrameGetPrice(String, Single, Single): PrivateScope, Public, Static, HideBySig
    TimeFrameGetPrice(String, Single): PrivateScope, Public, Static, HideBySig
    TimeFrameGetPrice(String, TFInterval, Single, Single): PrivateScope, Public, Static, HideBySig
    TimeFrameGetPrice(String, TFInterval, Single, TFExpand): PrivateScope, Public, Static, HideBySig
    TimeFrameGetPrice(String, TFInterval, Single): PrivateScope, Public, Static, HideBySig
    TimeFrameGetPrice(String, TFInterval): PrivateScope, Public, Static, HideBySig
Struct AmiBroker.PosSizing: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.PosSizing NoChange = 0 : Public, Static, Literal, HasDefault
    AmiBroker.PosSizing Value = 1 : Public, Static, Literal, HasDefault
    AmiBroker.PosSizing PercentOfEquity = 2 : Public, Static, Literal, HasDefault
    AmiBroker.PosSizing PercentOfPosition = 3 : Public, Static, Literal, HasDefault
    AmiBroker.PosSizing Shares = 4 : Public, Static, Literal, HasDefault
Struct AmiBroker.BacktestMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.BacktestMode Regular = 0 : Public, Static, Literal, HasDefault
    AmiBroker.BacktestMode RegularRaw = 1 : Public, Static, Literal, HasDefault
    AmiBroker.BacktestMode RegularRawMulti = 2 : Public, Static, Literal, HasDefault
    AmiBroker.BacktestMode Rotational = 5 : Public, Static, Literal, HasDefault
Struct AmiBroker.AlertIfType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.AlertIfType Default = 0 : Public, Static, Literal, HasDefault
    AmiBroker.AlertIfType Buy = 1 : Public, Static, Literal, HasDefault
    AmiBroker.AlertIfType Sell = 2 : Public, Static, Literal, HasDefault
    AmiBroker.AlertIfType Short = 3 : Public, Static, Literal, HasDefault
    AmiBroker.AlertIfType Cover = 4 : Public, Static, Literal, HasDefault
    AmiBroker.AlertIfType Other = 5 : Public, Static, Literal, HasDefault
Struct AmiBroker.AlertIfFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.AlertIfFlags Text = 1 : Public, Static, Literal, HasDefault
    AmiBroker.AlertIfFlags Beep = 2 : Public, Static, Literal, HasDefault
    AmiBroker.AlertIfFlags NoRepeatedType = 4 : Public, Static, Literal, HasDefault
    AmiBroker.AlertIfFlags NoRepeatedTime = 8 : Public, Static, Literal, HasDefault
Struct AmiBroker.ApplyStopType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.ApplyStopType Loss = 0 : Public, Static, Literal, HasDefault
    AmiBroker.ApplyStopType Profit = 1 : Public, Static, Literal, HasDefault
    AmiBroker.ApplyStopType Trailing = 2 : Public, Static, Literal, HasDefault
    AmiBroker.ApplyStopType NBar = 3 : Public, Static, Literal, HasDefault
Struct AmiBroker.ApplyStopMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.ApplyStopMode Disable = 0 : Public, Static, Literal, HasDefault
    AmiBroker.ApplyStopMode Percent = 1 : Public, Static, Literal, HasDefault
    AmiBroker.ApplyStopMode Points = 2 : Public, Static, Literal, HasDefault
    AmiBroker.ApplyStopMode Amount = 3 : Public, Static, Literal, HasDefault
Struct AmiBroker.ApplyStopExit: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.ApplyStopExit Regular = 0 : Public, Static, Literal, HasDefault
    AmiBroker.ApplyStopExit HighLowIntraday = 1 : Public, Static, Literal, HasDefault
    AmiBroker.ApplyStopExit HighLowRegular = 2 : Public, Static, Literal, HasDefault
Struct AmiBroker.EquityMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.EquityMode Calc = 0 : Public, Static, Literal, HasDefault
    AmiBroker.EquityMode CalcAndUpdate = 1 : Public, Static, Literal, HasDefault
    AmiBroker.EquityMode CalcAndUpdateWithDelay = 2 : Public, Static, Literal, HasDefault
Struct AmiBroker.EquityRange: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.EquityRange AASettings = -1 : Public, Static, Literal, HasDefault
    AmiBroker.EquityRange AllQuotes = 0 : Public, Static, Literal, HasDefault
    AmiBroker.EquityRange NLastQuotes = 1 : Public, Static, Literal, HasDefault
    AmiBroker.EquityRange NLastDays = 2 : Public, Static, Literal, HasDefault
    AmiBroker.EquityRange FromToDates = 3 : Public, Static, Literal, HasDefault
Class AmiBroker.AFTools: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String NoDefaultColumns = NoDefaultColumns : Public, Static, Literal, HasDefault
    System.String InitialEquity = InitialEquity : Public, Static, Literal, HasDefault
    System.String AllowSameBarExit = AllowSameBarExit : Public, Static, Literal, HasDefault
    System.String ActivateStopsImmediately = ActivateStopsImmediately : Public, Static, Literal, HasDefault
    System.String AllowPositionShrinking = AllowPositionShrinking : Public, Static, Literal, HasDefault
    System.String FuturesMode = FuturesMode : Public, Static, Literal, HasDefault
    System.String InterestRate = InterestRate : Public, Static, Literal, HasDefault
    System.String MaxOpenPositions = MaxOpenPositions : Public, Static, Literal, HasDefault
    System.String WorstRankHeld = WorstRankHeld : Public, Static, Literal, HasDefault
    System.String MinShares = MinShares : Public, Static, Literal, HasDefault
    System.String MinPosValue = MinPosValue : Public, Static, Literal, HasDefault
    System.String PriceBoundChecking = PriceBoundChecking : Public, Static, Literal, HasDefault
    System.String CommissionMode = CommissionMode : Public, Static, Literal, HasDefault
    System.String CommissionAmount = CommissionAmount : Public, Static, Literal, HasDefault
    System.String AccountMargin = AccountMargin : Public, Static, Literal, HasDefault
    System.String ReverseSignalForcesExit = ReverseSignalForcesExit : Public, Static, Literal, HasDefault
    System.String UsePrevBarEquityForPosSizing = UsePrevBarEquityForPosSizing : Public, Static, Literal, HasDefault
    System.String PortfolioReportMode = PortfolioReportMode : Public, Static, Literal, HasDefault
    System.String UseCustomBacktestProc = UseCustomBacktestProc : Public, Static, Literal, HasDefault
    System.String EveryBarNullCheck = EveryBarNullCheck : Public, Static, Literal, HasDefault
    System.String HoldMinBars = HoldMinBars : Public, Static, Literal, HasDefault
    System.String EarlyExitBars = EarlyExitBars : Public, Static, Literal, HasDefault
    System.String EarlyExitFee = EarlyExitFee : Public, Static, Literal, HasDefault
    System.String HoldMinDays = HoldMinDays : Public, Static, Literal, HasDefault
    System.String EarlyExitDays = EarlyExitDays : Public, Static, Literal, HasDefault
    System.String DisableRuinStop = DisableRuinStop : Public, Static, Literal, HasDefault
    System.String GenerateReport = GenerateReport : Public, Static, Literal, HasDefault
    System.String SeparateLongShortRank = SeparateLongShortRank : Public, Static, Literal, HasDefault
    System.String MaxOpenLong = MaxOpenLong : Public, Static, Literal, HasDefault
    System.String MaxOpenShort = MaxOpenShort : Public, Static, Literal, HasDefault
    System.String RefreshWhenCompleted = RefreshWhenCompleted : Public, Static, Literal, HasDefault
    System.String RequireDeclarations = RequireDeclarations : Public, Static, Literal, HasDefault
    System.String ExtraColumnsLocation = ExtraColumnsLocation : Public, Static, Literal, HasDefault
    System.String SettlementDelay = SettlementDelay : Public, Static, Literal, HasDefault
    System.String StaticVarAutoSave = StaticVarAutoSave : Public, Static, Literal, HasDefault
    System.String MCEnable = MCEnable : Public, Static, Literal, HasDefault
    System.String MCRuns = MCRuns : Public, Static, Literal, HasDefault
    System.String MCPosSizeMethod = MCPosSizeMethod : Public, Static, Literal, HasDefault
    System.String MCPosSizeShares = MCPosSizeShares : Public, Static, Literal, HasDefault
    System.String MCPosSizeValue = MCPosSizeValue : Public, Static, Literal, HasDefault
    System.String MCPosSizePctEquity = MCPosSizePctEquity : Public, Static, Literal, HasDefault
    System.String MCChartEquityCurves = MCChartEquityCurves : Public, Static, Literal, HasDefault
    System.String MCStrawBroomLines = MCStrawBroomLines : Public, Static, Literal, HasDefault
    System.String WarningLevel = WarningLevel : Public, Static, Literal, HasDefault
    System.String BHSymbol = BHSymbol : Public, Static, Literal, HasDefault
    Single SigScaleIn = 99998 : Public, Static, Literal, HasDefault
    Single SigScaleOut = 99999 : Public, Static, Literal, HasDefault
    Single ScoreExitAll = 1E+12 : Public, Static, Literal, HasDefault
    Single ScoreNoRotate = 1E+11 : Public, Static, Literal, HasDefault
  Methods:
    Sort(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    Sort(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Sort(ATArray): PrivateScope, Public, Static, HideBySig
    Sum(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Sum(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    SumSince(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    BarsSinceCompare(ATArray, String, ATArray): PrivateScope, Public, Static, HideBySig (Obsolete)
    Param(String, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Param(String, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Param(String, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Param(String, Single, Single): PrivateScope, Public, Static, HideBySig
    Param(String, Single): PrivateScope, Public, Static, HideBySig
    ParamColor(String, Single): PrivateScope, Public, Static, HideBySig
    ParamColor(String, Color): PrivateScope, Public, Static, HideBySig
    ParamDate(String, String): PrivateScope, Public, Static, HideBySig
    ParamField(String): PrivateScope, Public, Static, HideBySig
    ParamField(String, Single): PrivateScope, Public, Static, HideBySig
    ParamList(String, String): PrivateScope, Public, Static, HideBySig
    ParamList(String, String, Int32): PrivateScope, Public, Static, HideBySig
    ParamStr(String, String): PrivateScope, Public, Static, HideBySig
    ParamStyle(String, Single, Single): PrivateScope, Public, Static, HideBySig
    ParamStyle(String, Single): PrivateScope, Public, Static, HideBySig
    ParamStyle(String): PrivateScope, Public, Static, HideBySig
    ParamStyle(String, Style, StyleMask): PrivateScope, Public, Static, HideBySig
    ParamStyle(String, Style): PrivateScope, Public, Static, HideBySig
    ParamTime(String, String): PrivateScope, Public, Static, HideBySig
    ParamToggle(String, String): PrivateScope, Public, Static, HideBySig
    ParamToggle(String, String, Int32): PrivateScope, Public, Static, HideBySig
    ParamTrigger(String, String): PrivateScope, Public, Static, HideBySig
    BarsSince(ATArray): PrivateScope, Public, Static, HideBySig
    Cross(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    Cross(Single, ATArray): PrivateScope, Public, Static, HideBySig
    Cross(ATArray, Single): PrivateScope, Public, Static, HideBySig
    EnableRotationalTrading(): PrivateScope, Public, Static, HideBySig
    ExRem(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    ExRemSpan(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Flip(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    Hold(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Iif(ATArray, ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    Iif(ATArray, ATArray, Single): PrivateScope, Public, Static, HideBySig
    Iif(ATArray, Single, ATArray): PrivateScope, Public, Static, HideBySig
    Iif(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    Iif(ATArray, Shape, Shape): PrivateScope, Public, Static, HideBySig
    Iif(ATArray, Shape, ATArray): PrivateScope, Public, Static, HideBySig
    Iif(ATArray, ATArray, Shape): PrivateScope, Public, Static, HideBySig
    Iif(ATArray, Color, Color): PrivateScope, Public, Static, HideBySig
    Iif(ATArray, Color, ATArray): PrivateScope, Public, Static, HideBySig
    Iif(ATArray, ATArray, Color): PrivateScope, Public, Static, HideBySig
    Iif(Single, ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    Iif(Single, ATArray, Single): PrivateScope, Public, Static, HideBySig
    Iif(Single, Single, ATArray): PrivateScope, Public, Static, HideBySig
    Iif(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Iif(Single, Shape, Shape): PrivateScope, Public, Static, HideBySig
    Iif(Single, Shape, ATArray): PrivateScope, Public, Static, HideBySig
    Iif(Single, ATArray, Shape): PrivateScope, Public, Static, HideBySig
    Iif(Single, Color, Color): PrivateScope, Public, Static, HideBySig
    Iif(Single, Color, ATArray): PrivateScope, Public, Static, HideBySig
    Iif(Single, ATArray, Color): PrivateScope, Public, Static, HideBySig
    LastValue(ATArray): PrivateScope, Public, Static, HideBySig
    LastValue(ATArray, Single): PrivateScope, Public, Static, HideBySig
    LastValue(ATArray, Boolean): PrivateScope, Public, Static, HideBySig
    Ref(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Ref(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    GetBacktesterObject(): PrivateScope, Public, Static, HideBySig
    GetTradingInterface(String): PrivateScope, Public, Static, HideBySig
    GetOption(String): PrivateScope, Public, Static, HideBySig
    Optimize(String, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    OptimizerSetEngine(String): PrivateScope, Public, Static, HideBySig
    OptimizerSetOption(String, Single): PrivateScope, Public, Static, HideBySig
    SetBacktestMode(BacktestMode): PrivateScope, Public, Static, HideBySig
    SetBacktestMode(Single): PrivateScope, Public, Static, HideBySig
    SetCustomBacktestProc(String, Boolean): PrivateScope, Public, Static, HideBySig
    SetCustomBacktestProc(String): PrivateScope, Public, Static, HideBySig
    SetFormulaName(String): PrivateScope, Public, Static, HideBySig
    SetOption(String, Single): PrivateScope, Public, Static, HideBySig
    SetPositionSize(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    SetPositionSize(ATArray, PosSizing): PrivateScope, Public, Static, HideBySig
    SetPositionSize(Single, ATArray): PrivateScope, Public, Static, HideBySig
    SetPositionSize(Single, PosSizing): PrivateScope, Public, Static, HideBySig
    SetPositionSize(ATArray, Single): PrivateScope, Public, Static, HideBySig
    SetPositionSize(Single, Single): PrivateScope, Public, Static, HideBySig
    SetTradeDelays(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    ValueWhen(ATArray, ATArray, Single): PrivateScope, Public, Static, HideBySig
    ValueWhen(ATArray, ATArray): PrivateScope, Public, Static, HideBySig
    AlertIf(ATArray, String, String, AlertIfType, AlertIfFlags, Single): PrivateScope, Public, Static, HideBySig
    AlertIf(ATArray, String, String, AlertIfType, AlertIfFlags): PrivateScope, Public, Static, HideBySig
    AlertIf(ATArray, String, String, AlertIfType): PrivateScope, Public, Static, HideBySig
    AlertIf(ATArray, String, String): PrivateScope, Public, Static, HideBySig
    AlertIf(ATArray, String, String, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    AlertIf(ATArray, String, String, Single, Single): PrivateScope, Public, Static, HideBySig
    AlertIf(ATArray, String, String, Single): PrivateScope, Public, Static, HideBySig
    AlertIf(Single, String, String, AlertIfType, AlertIfFlags, Single): PrivateScope, Public, Static, HideBySig
    AlertIf(Single, String, String, AlertIfType, AlertIfFlags): PrivateScope, Public, Static, HideBySig
    AlertIf(Single, String, String, AlertIfType): PrivateScope, Public, Static, HideBySig
    AlertIf(Single, String, String): PrivateScope, Public, Static, HideBySig
    AlertIf(Single, String, String, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    AlertIf(Single, String, String, Single, Single): PrivateScope, Public, Static, HideBySig
    AlertIf(Single, String, String, Single): PrivateScope, Public, Static, HideBySig
    ApplyStop(ApplyStopType, ApplyStopMode, Single, ApplyStopExit, Boolean, Single): PrivateScope, Public, Static, HideBySig
    ApplyStop(ApplyStopType, ApplyStopMode, Single, ApplyStopExit, Boolean): PrivateScope, Public, Static, HideBySig
    ApplyStop(ApplyStopType, ApplyStopMode, Single, ApplyStopExit): PrivateScope, Public, Static, HideBySig
    ApplyStop(ApplyStopType, ApplyStopMode, ATArray, ApplyStopExit, Boolean, Single): PrivateScope, Public, Static, HideBySig
    ApplyStop(ApplyStopType, ApplyStopMode, ATArray, ApplyStopExit, Boolean): PrivateScope, Public, Static, HideBySig
    ApplyStop(ApplyStopType, ApplyStopMode, ATArray, ApplyStopExit): PrivateScope, Public, Static, HideBySig
    ApplyStop(Single, Single, Single, Single, Boolean, Single): PrivateScope, Public, Static, HideBySig
    ApplyStop(Single, Single, Single, Single, Boolean): PrivateScope, Public, Static, HideBySig
    ApplyStop(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    ApplyStop(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    ApplyStop(Single, Single, ATArray, Single, Boolean, Single): PrivateScope, Public, Static, HideBySig
    ApplyStop(Single, Single, ATArray, Single, Boolean): PrivateScope, Public, Static, HideBySig
    ApplyStop(Single, Single, ATArray, Single): PrivateScope, Public, Static, HideBySig
    ApplyStop(Single, Single, ATArray): PrivateScope, Public, Static, HideBySig
    ApplyStop(Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    ApplyStop(Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    ApplyStop(Single, Single, ATArray, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    ApplyStop(Single, Single, ATArray, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    ApplyStop(Single, Single, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    ApplyStop(Single, Single, ATArray, Single, Single, Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    SetStopPrecedence(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Equity(EquityMode, EquityRange, Single, Single): PrivateScope, Public, Static, HideBySig
    Equity(EquityMode, EquityRange, Single): PrivateScope, Public, Static, HideBySig
    Equity(EquityMode, EquityRange): PrivateScope, Public, Static, HideBySig
    Equity(EquityMode): PrivateScope, Public, Static, HideBySig
    Equity(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Equity(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Equity(Single, Single): PrivateScope, Public, Static, HideBySig
    Equity(Single): PrivateScope, Public, Static, HideBySig
    Equity(): PrivateScope, Public, Static, HideBySig
    CreateStaticObject(String): PrivateScope, Public, Static, HideBySig
    SendEmail(String, String, Single): PrivateScope, Public, Static, HideBySig
    SendEmail(String, String): PrivateScope, Public, Static, HideBySig
    Reverse(ATArray, Single, Single): PrivateScope, Public, Static, HideBySig
    Reverse(ATArray, Single): PrivateScope, Public, Static, HideBySig
    Reverse(ATArray): PrivateScope, Public, Static, HideBySig
    Sort(ATArray, Single, Single, Single): PrivateScope, Public, Static, HideBySig
Struct AmiBroker.StatType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.StatType All = 0 : Public, Static, Literal, HasDefault
    AmiBroker.StatType LongsOnly = 1 : Public, Static, Literal, HasDefault
    AmiBroker.StatType ShortOnly = 2 : Public, Static, Literal, HasDefault
Struct AmiBroker.SignalDirection: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.SignalDirection EntryAndExit = 0 : Public, Static, Literal, HasDefault
    AmiBroker.SignalDirection EntriesOnly = 1 : Public, Static, Literal, HasDefault
    AmiBroker.SignalDirection ExitsOnly = 2 : Public, Static, Literal, HasDefault
Class AmiBroker.Backtester: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    Double Cash 'get ' : 
    Double Equity 'get ' : 
    AmiBroker.ATArray EquityArray 'get ' : 
    Double InitialEquity 'get ' : 
    Double MarginLoan 'get ' : 
  Methods:
    AddCustomMetric(String, Single): PrivateScope, Public, HideBySig
    AddCustomMetric(String, Single, Single, Single): PrivateScope, Public, HideBySig
    AddCustomMetric(String, Single, Single, Single, Single): PrivateScope, Public, HideBySig
    AddCustomMetric(String, Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig
    Backtest(): PrivateScope, Public, HideBySig
    Backtest(Boolean): PrivateScope, Public, HideBySig
    EnterTrade(Int32, String, Boolean, Single, Single): PrivateScope, Public, HideBySig
    EnterTrade(Int32, String, Boolean, Single, Single, Single): PrivateScope, Public, HideBySig
    EnterTrade(Int32, String, Boolean, Single, Single, Single, Single): PrivateScope, Public, HideBySig
    EnterTrade(Int32, String, Boolean, Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig
    EnterTrade(Int32, String, Boolean, Single, Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig
    EnterTrade(Int32, String, Boolean, Single, Single, Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig
    ExitTrade(Int32, String, Single): PrivateScope, Public, HideBySig
    ExitTrade(Int32, String, Single, Int32): PrivateScope, Public, HideBySig
    ExitTrade(Int32, Int64, Single, Int32): PrivateScope, Public, HideBySig
    FindOpenPos(String): PrivateScope, Public, HideBySig
    FindSignal(Int32, String, SignalDirection): PrivateScope, Public, HideBySig
    GetSignalQty(Int32, SignalDirection): PrivateScope, Public, HideBySig
    GetFirstOpenPos(): PrivateScope, Public, HideBySig
    GetFirstSignal(Int32): PrivateScope, Public, HideBySig
    GetFirstTrade(): PrivateScope, Public, HideBySig
    GetNextOpenPos(): PrivateScope, Public, HideBySig
    GetNextSignal(Int32): PrivateScope, Public, HideBySig
    GetNextTrade(): PrivateScope, Public, HideBySig
    GetOpenPosQty(): PrivateScope, Public, HideBySig
    GetPerformanceStats(StatType): PrivateScope, Public, HideBySig
    HandleStops(Int32): PrivateScope, Public, HideBySig
    ListTrades(): PrivateScope, Public, HideBySig
    PostProcess(): PrivateScope, Public, HideBySig
    PreProcess(): PrivateScope, Public, HideBySig
    ProcessTradeSignals(Int32): PrivateScope, Public, HideBySig
    RawTextOutput(String): PrivateScope, Public, HideBySig
    ScaleTrade(Int32, String, Boolean, Single, Single): PrivateScope, Public, HideBySig
    ScaleTrade(Int32, String, Boolean, Single, Single, Single): PrivateScope, Public, HideBySig
    ScaleTrade(Int32, Int64, Boolean, Single, Single, Single): PrivateScope, Public, HideBySig
    UpdateStats(Int32, Int32): PrivateScope, Public, HideBySig
    get_Cash(): PrivateScope, Public, HideBySig, SpecialName
    get_Equity(): PrivateScope, Public, HideBySig, SpecialName
    get_EquityArray(): PrivateScope, Public, HideBySig, SpecialName
    get_InitialEquity(): PrivateScope, Public, HideBySig, SpecialName
    get_MarginLoan(): PrivateScope, Public, HideBySig, SpecialName
    GetMonteCarloSim(): PrivateScope, Public, HideBySig
Struct AmiBroker.SignalReason: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.SignalReason Regular = 0 : Public, Static, Literal, HasDefault
    AmiBroker.SignalReason MaximumLoss = 1 : Public, Static, Literal, HasDefault
    AmiBroker.SignalReason Profit = 2 : Public, Static, Literal, HasDefault
    AmiBroker.SignalReason Trail = 3 : Public, Static, Literal, HasDefault
    AmiBroker.SignalReason NBar = 4 : Public, Static, Literal, HasDefault
    AmiBroker.SignalReason Ruin = 5 : Public, Static, Literal, HasDefault
Struct AmiBroker.SignalType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.SignalType Rank = 0 : Public, Static, Literal, HasDefault
    AmiBroker.SignalType Buy = 1 : Public, Static, Literal, HasDefault
    AmiBroker.SignalType Sell = 2 : Public, Static, Literal, HasDefault
    AmiBroker.SignalType Short = 3 : Public, Static, Literal, HasDefault
    AmiBroker.SignalType Cover = 4 : Public, Static, Literal, HasDefault
    AmiBroker.SignalType ScaleIn = 5 : Public, Static, Literal, HasDefault
    AmiBroker.SignalType ScaleOut = 6 : Public, Static, Literal, HasDefault
Class AmiBroker.Signal: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    Single MarginDeposit 'get ' : 
    Single PointValue 'get ' : 
    Single PosScore 'get set' : 
    Single PosSize 'get set' : 
    Single Price 'get set' : 
    AmiBroker.SignalReason Reason 'get ' : 
    Single RoundLotSize 'get ' : 
    System.String Symbol 'get ' : 
    Single TickSize 'get ' : 
    AmiBroker.SignalType Type 'get ' : 
  Methods:
    IsEntry(): PrivateScope, Public, HideBySig
    IsExit(): PrivateScope, Public, HideBySig
    IsLong(): PrivateScope, Public, HideBySig
    IsScale(): PrivateScope, Public, HideBySig
    get_MarginDeposit(): PrivateScope, Public, HideBySig, SpecialName
    get_PointValue(): PrivateScope, Public, HideBySig, SpecialName
    get_PosScore(): PrivateScope, Public, HideBySig, SpecialName
    set_PosScore(Single): PrivateScope, Public, HideBySig, SpecialName
    get_PosSize(): PrivateScope, Public, HideBySig, SpecialName
    set_PosSize(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Price(): PrivateScope, Public, HideBySig, SpecialName
    set_Price(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Reason(): PrivateScope, Public, HideBySig, SpecialName
    get_RoundLotSize(): PrivateScope, Public, HideBySig, SpecialName
    get_Symbol(): PrivateScope, Public, HideBySig, SpecialName
    get_TickSize(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
Class AmiBroker.Stats: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Fields:
    System.String InitialCapital = InitialCapital : Public, Static, Literal, HasDefault
    System.String EndingCapital = EndingCapital : Public, Static, Literal, HasDefault
    System.String NetProfit = NetProfit : Public, Static, Literal, HasDefault
    System.String NetProfitPercent = NetProfitPercent : Public, Static, Literal, HasDefault
    System.String ExposurePercent = ExposurePercent : Public, Static, Literal, HasDefault
    System.String NetRAR = NetRAR : Public, Static, Literal, HasDefault
    System.String Car = CAR : Public, Static, Literal, HasDefault
    System.String Rar = RAR : Public, Static, Literal, HasDefault
    System.String AllQty = AllQty : Public, Static, Literal, HasDefault
    System.String AllPercent = AllPercent : Public, Static, Literal, HasDefault
    System.String AllAvgProfitLoss = AllAvgProfitLoss : Public, Static, Literal, HasDefault
    System.String AllAvgProfitLossPercent = AllAvgProfitLossPercent : Public, Static, Literal, HasDefault
    System.String AllAvgBarsHeld = AllAvgBarsHeld : Public, Static, Literal, HasDefault
    System.String WinnersQty = WinnersQty : Public, Static, Literal, HasDefault
    System.String WinnersPercent = WinnersPercent : Public, Static, Literal, HasDefault
    System.String WinnersTotalProfit = WinnersTotalProfit : Public, Static, Literal, HasDefault
    System.String WinnersAvgProfit = WinnersAvgProfit : Public, Static, Literal, HasDefault
    System.String WinnersAvgProfitPercent = WinnersAvgProfitPercent : Public, Static, Literal, HasDefault
    System.String WinnersAvgBarsHeld = WinnersAvgBarsHeld : Public, Static, Literal, HasDefault
    System.String WinnersMaxConsecutive = WinnersMaxConsecutive : Public, Static, Literal, HasDefault
    System.String WinnersLargestWin = WinnersLargestWin : Public, Static, Literal, HasDefault
    System.String WinnersLargestWinBars = WinnersLargestWinBars : Public, Static, Literal, HasDefault
    System.String LosersQty = LosersQty : Public, Static, Literal, HasDefault
    System.String LosersPercent = LosersPercent : Public, Static, Literal, HasDefault
    System.String LosersTotalLoss = LosersTotalLoss : Public, Static, Literal, HasDefault
    System.String LosersAvgLoss = LosersAvgLoss : Public, Static, Literal, HasDefault
    System.String LosersAvgLossPercent = LosersAvgLossPercent : Public, Static, Literal, HasDefault
    System.String LosersAvgBarsHeld = LosersAvgBarsHeld : Public, Static, Literal, HasDefault
    System.String LosersMaxConsecutive = LosersMaxConsecutive : Public, Static, Literal, HasDefault
    System.String LosersLargestLoss = LosersLargestLoss : Public, Static, Literal, HasDefault
    System.String LosersLargestLossBars = LosersLargestLossBars : Public, Static, Literal, HasDefault
    System.String MaxTradeDrawdown = MaxTradeDrawdown : Public, Static, Literal, HasDefault
    System.String MaxTradeDrawdownPercent = MaxTradeDrawdownPercent : Public, Static, Literal, HasDefault
    System.String MaxSystemDrawdown = MaxSystemDrawdown : Public, Static, Literal, HasDefault
    System.String MaxSystemDrawdownPercent = MaxSystemDrawdownPercent : Public, Static, Literal, HasDefault
    System.String RecoveryFactor = RecoveryFactor : Public, Static, Literal, HasDefault
    System.String CarMdd = CAR/MDD : Public, Static, Literal, HasDefault
    System.String RarMdd = RAR/MDD : Public, Static, Literal, HasDefault
    System.String ProfitFactor = ProfitFactor : Public, Static, Literal, HasDefault
    System.String PayoffRatio = PayoffRatio : Public, Static, Literal, HasDefault
    System.String StandardError = StandardError : Public, Static, Literal, HasDefault
    System.String Rrr = RRR : Public, Static, Literal, HasDefault
    System.String UlcerIndex = UlcerIndex : Public, Static, Literal, HasDefault
    System.String UlcerPerformanceIndex = UlcerPerformanceIndex : Public, Static, Literal, HasDefault
    System.String SharpeRatio = SharpeRatio : Public, Static, Literal, HasDefault
    System.String KRatio = KRatio : Public, Static, Literal, HasDefault
    System.String TransactionCosts = TransactionCosts : Public, Static, Literal, HasDefault
  Methods:
    GetValue(String): PrivateScope, Public, HideBySig
Struct AmiBroker.TradePriceField: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.TradePriceField Open = 0 : Public, Static, Literal, HasDefault
    AmiBroker.TradePriceField High = 1 : Public, Static, Literal, HasDefault
    AmiBroker.TradePriceField Low = 2 : Public, Static, Literal, HasDefault
    AmiBroker.TradePriceField Close = 3 : Public, Static, Literal, HasDefault
    AmiBroker.TradePriceField ExchangeRate = 4 : Public, Static, Literal, HasDefault
Class AmiBroker.Trade: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    Int32 BarsInTrade 'get ' : 
    Single EntryDateTime 'get ' : 
    Single EntryFxRate 'get ' : 
    Single EntryPrice 'get ' : 
    Single ExitDateTime 'get ' : 
    Single ExitFxRate 'get ' : 
    Single ExitPrice 'get ' : 
    Int64 Handle 'get ' : 
    Boolean IsLong 'get ' : 
    Boolean IsOpen 'get ' : 
    Single MarginDeposit 'get ' : 
    Double MarginLoan 'get ' : 
    Single PointValue 'get ' : 
    Single RoundLotSize 'get ' : 
    Single Score 'get ' : 
    Single Shares 'get ' : 
    System.String Symbol 'get ' : 
    Single TickSize 'get ' : 
    System.String FullName 'get ' : 
  Methods:
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    AddCustomMetric(String, Single): PrivateScope, Public, HideBySig
    AddCustomMetric(String, String): PrivateScope, Public, HideBySig
    GetCommission(Boolean): PrivateScope, Public, HideBySig
    GetEntryValue(): PrivateScope, Public, HideBySig
    GetMAE(): PrivateScope, Public, HideBySig
    GetMFE(): PrivateScope, Public, HideBySig
    GetPercentProfit(): PrivateScope, Public, HideBySig
    GetPositionValue(): PrivateScope, Public, HideBySig
    GetPrice(Int32, TradePriceField): PrivateScope, Public, HideBySig
    GetPrice(Int32, String): PrivateScope, Public, HideBySig
    GetProfit(): PrivateScope, Public, HideBySig
    get_BarsInTrade(): PrivateScope, Public, HideBySig, SpecialName
    get_EntryDateTime(): PrivateScope, Public, HideBySig, SpecialName
    get_EntryFxRate(): PrivateScope, Public, HideBySig, SpecialName
    get_EntryPrice(): PrivateScope, Public, HideBySig, SpecialName
    get_ExitDateTime(): PrivateScope, Public, HideBySig, SpecialName
    get_ExitFxRate(): PrivateScope, Public, HideBySig, SpecialName
    get_ExitPrice(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsLong(): PrivateScope, Public, HideBySig, SpecialName
    get_IsOpen(): PrivateScope, Public, HideBySig, SpecialName
    get_MarginDeposit(): PrivateScope, Public, HideBySig, SpecialName
    get_MarginLoan(): PrivateScope, Public, HideBySig, SpecialName
    get_PointValue(): PrivateScope, Public, HideBySig, SpecialName
    get_RoundLotSize(): PrivateScope, Public, HideBySig, SpecialName
    get_Score(): PrivateScope, Public, HideBySig, SpecialName
    get_Shares(): PrivateScope, Public, HideBySig, SpecialName
    get_Symbol(): PrivateScope, Public, HideBySig, SpecialName
    get_TickSize(): PrivateScope, Public, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, HideBySig, SpecialName
Struct AmiBroker.ATFloat: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single Value : Public
    Single Null = -1E+10 : Public, Static, Literal, HasDefault
    Single True = 1 : Public, Static, Literal, HasDefault
    Single False = 0 : Public, Static, Literal, HasDefault
    Single Ok = 1 : Public, Static, Literal, HasDefault
    Single Fail = 0 : Public, Static, Literal, HasDefault
  Methods:
    IsTrue(): PrivateScope, Public, HideBySig
    IsFalse(): PrivateScope, Public, HideBySig
    IsFinit(): PrivateScope, Public, HideBySig
    IsInfinity(): PrivateScope, Public, HideBySig
    IsNaN(): PrivateScope, Public, HideBySig
    IsNull(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String): PrivateScope, Public, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    IsTrue(Single): PrivateScope, Public, Static, HideBySig
    IsFalse(Single): PrivateScope, Public, Static, HideBySig
    IsFinit(Single): PrivateScope, Public, Static, HideBySig
    IsInfinity(Single): PrivateScope, Public, Static, HideBySig
    IsNaN(Single): PrivateScope, Public, Static, HideBySig
    IsNull(Single): PrivateScope, Public, Static, HideBySig
    ToString(Single): PrivateScope, Public, Static, HideBySig
    ToString(Single, String): PrivateScope, Public, Static, HideBySig
    ToString(Single, String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToString(Single, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ABDateTimeToDateTime(Single): PrivateScope, Public, Static, HideBySig
    ABDateNumToDateTime(Single): PrivateScope, Public, Static, HideBySig
    ABTimeNumToTimeSpan(Single): PrivateScope, Public, Static, HideBySig
    TimeSpanToABTimeNum(TimeSpan): PrivateScope, Public, Static, HideBySig
    DateTimeToABTimeNum(DateTime): PrivateScope, Public, Static, HideBySig
    DateTimeToABDateNum(DateTime): PrivateScope, Public, Static, HideBySig
    DateTimeToABDateTime(DateTime): PrivateScope, Public, Static, HideBySig
    op_Explicit(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Int64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Nullable`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(ATFloat, ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(ATFloat, ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(ATFloat, ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(ATFloat, ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Modulus(ATFloat, ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_ExclusiveOr(ATFloat, ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(ATFloat, ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(ATFloat, ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(ATFloat, ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(ATFloat, ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(ATFloat, ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(ATFloat, ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseAnd(ATFloat, ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseOr(ATFloat, ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_True(ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_False(ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
Class AmiBroker.ATArray: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(AmiBroker.ATArray): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerable
  Properties:
    Int32 Length 'get ' : 
    Single* Array 'get ' : 
    Single Item [Int32] 'get set' : 
  Methods:
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_Array(): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ToString(String): PrivateScope, Public, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Single): PrivateScope, Public, HideBySig, SpecialName
    Free(): PrivateScope, Public, HideBySig
    Copy(ATArray): PrivateScope, Public, HideBySig
    ReInit(Single): PrivateScope, Public, HideBySig
    ReInit(ATArray): PrivateScope, Public, HideBySig
    GetFirstValidIndex(): PrivateScope, Public, HideBySig
    Fill(Single): PrivateScope, Public, HideBySig
    Fill(Single, Int32): PrivateScope, Public, HideBySig
    Nz(): PrivateScope, Public, HideBySig
    Nz(Single): PrivateScope, Public, HideBySig
    Abs(): PrivateScope, Public, HideBySig
    Add(Single): PrivateScope, Public, HideBySig
    Add(ATArray): PrivateScope, Public, HideBySig
    Sub(Single): PrivateScope, Public, HideBySig
    Sub(ATArray): PrivateScope, Public, HideBySig
    SubRev(Single): PrivateScope, Public, HideBySig
    Mul(Single): PrivateScope, Public, HideBySig
    Mul(ATArray): PrivateScope, Public, HideBySig
    Div(Single): PrivateScope, Public, HideBySig
    Div(ATArray): PrivateScope, Public, HideBySig
    DivRev(Single): PrivateScope, Public, HideBySig
    Mod(Single): PrivateScope, Public, HideBySig
    Mod(ATArray): PrivateScope, Public, HideBySig
    ModRev(Single): PrivateScope, Public, HideBySig
    Pow(Single): PrivateScope, Public, HideBySig
    Pow(ATArray): PrivateScope, Public, HideBySig
    PowRev(Single): PrivateScope, Public, HideBySig
    IsEQ(ATArray): PrivateScope, Public, HideBySig
    IsEQ(Single): PrivateScope, Public, HideBySig
    IsNEQ(ATArray): PrivateScope, Public, HideBySig
    IsNEQ(Single): PrivateScope, Public, HideBySig
    IsGT(ATArray): PrivateScope, Public, HideBySig
    IsGT(Single): PrivateScope, Public, HideBySig
    IsGTE(ATArray): PrivateScope, Public, HideBySig
    IsGTE(Single): PrivateScope, Public, HideBySig
    IsLT(ATArray): PrivateScope, Public, HideBySig
    IsLT(Single): PrivateScope, Public, HideBySig
    IsLTE(ATArray): PrivateScope, Public, HideBySig
    IsLTE(Single): PrivateScope, Public, HideBySig
    And(ATArray): PrivateScope, Public, HideBySig
    And(Single): PrivateScope, Public, HideBySig
    Or(ATArray): PrivateScope, Public, HideBySig
    Or(Single): PrivateScope, Public, HideBySig
    Not(): PrivateScope, Public, HideBySig
    op_Addition(ATArray, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Single, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(ATArray, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(ATArray, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Single, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(ATArray, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(ATArray, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Single, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(ATArray, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(ATArray, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Single, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(ATArray, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Modulus(ATArray, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Modulus(ATArray, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(ATArray, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(Single, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(ATArray, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(ATArray, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(Single, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(ATArray, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(ATArray, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(Single, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(ATArray, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(ATArray, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(Single, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(ATArray, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(ATArray, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Single, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(ATArray, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(ATArray, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Single, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(ATArray, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseAnd(ATArray, Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseAnd(Boolean, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseAnd(ATArray, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseAnd(Single, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseAnd(ATArray, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseOr(ATArray, Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseOr(Boolean, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseOr(ATArray, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseOr(Single, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseOr(ATArray, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_ExclusiveOr(ATArray, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_ExclusiveOr(Single, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_ExclusiveOr(ATArray, ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LogicalNot(ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Increment(ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Decrement(ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_UnaryNegation(ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(ATFloat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Single[]): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(ATArray): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Double[]): PrivateScope, Public, Static, HideBySig, SpecialName
    ABDateTimeToDateTime(ATArray): PrivateScope, Public, Static, HideBySig
    ABDateNumToDateTime(ATArray): PrivateScope, Public, Static, HideBySig
    ABTimeNumToTimeSpan(ATArray): PrivateScope, Public, Static, HideBySig
    TimeSpanToABTimeNum(TimeSpan[]): PrivateScope, Public, Static, HideBySig
    DateTimeToABTimeNum(DateTime[]): PrivateScope, Public, Static, HideBySig
    DateTimeToABDateNum(DateTime[]): PrivateScope, Public, Static, HideBySig
    DateTimeToABDateTime(DateTime[]): PrivateScope, Public, Static, HideBySig
Class AmiBroker.ATArrayEnumerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(AmiBroker.ATArray): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    System.Object Current 'get ' : 
  Methods:
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Struct AmiBroker.ATVarType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.ATVarType None = 0 : Public, Static, Literal, HasDefault
    AmiBroker.ATVarType Float = 1 : Public, Static, Literal, HasDefault
    AmiBroker.ATVarType Array = 2 : Public, Static, Literal, HasDefault
    AmiBroker.ATVarType String = 3 : Public, Static, Literal, HasDefault
    AmiBroker.ATVarType Object = 4 : Public, Static, Literal, HasDefault
    AmiBroker.ATVarType Matrix = 7 : Public, Static, Literal, HasDefault
Struct AmiBroker.ATVarValue: AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single Float : Public
    Single* Array : Public
    Byte* String : Public
    IntPtr Object : Public
    Void* Matrix : Public
Struct AmiBroker.ATVar: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Nullable`1[System.Boolean]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Nullable`1[System.Int32]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Nullable`1[System.Int64]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Nullable`1[System.Single]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(AmiBroker.ATFloat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Nullable`1[System.Double]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(AmiBroker.ATArray): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(AmiBroker.ATArray, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(AmiBroker.ATMatrix): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    AmiBroker.ATVarType Type : Public
    AmiBroker.ATVarValue Value : Public
    AmiBroker.ATVar Null : Public, Static
    AmiBroker.ATVar True : Public, Static
    AmiBroker.ATVar False : Public, Static
    AmiBroker.ATVar Ok : Public, Static
    AmiBroker.ATVar Fail : Public, Static
    AmiBroker.ATVar Zero : Public, Static
    AmiBroker.ATVar None : Public, Static
  Methods:
    GetFloat(): PrivateScope, Public, HideBySig
    GetATFloat(): PrivateScope, Public, HideBySig
    GetString(): PrivateScope, Public, HideBySig
    GetArray(): PrivateScope, Public, HideBySig
    GetArray(Boolean): PrivateScope, Public, HideBySig
    GetObject(): PrivateScope, Public, HideBySig
    GetMatrix(): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(ATVar, ATVar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(ATVar, ATVar): PrivateScope, Public, Static, HideBySig, SpecialName
Struct AmiBroker.ATAfl: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    AmiBroker.ATVarType Type 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    GetATVar(): PrivateScope, Public, HideBySig
    GetFloat(): PrivateScope, Public, HideBySig
    GetFloat(Single): PrivateScope, Public, HideBySig
    GetATFloat(): PrivateScope, Public, HideBySig
    GetATFloat(Single): PrivateScope, Public, HideBySig
    GetString(): PrivateScope, Public, HideBySig
    GetString(String): PrivateScope, Public, HideBySig
    GetArray(): PrivateScope, Public, HideBySig
    GetArray(Single): PrivateScope, Public, HideBySig
    GetArray(ATArray): PrivateScope, Public, HideBySig
    GetArray(Boolean): PrivateScope, Public, HideBySig
    GetArray(Single, Boolean): PrivateScope, Public, HideBySig
    GetObject(): PrivateScope, Public, HideBySig
    GetMatrix(): PrivateScope, Public, HideBySig
    Set(Boolean): PrivateScope, Public, HideBySig
    Set(Nullable`1): PrivateScope, Public, HideBySig
    Set(Int32): PrivateScope, Public, HideBySig
    Set(Nullable`1): PrivateScope, Public, HideBySig
    Set(Int64): PrivateScope, Public, HideBySig
    Set(Nullable`1): PrivateScope, Public, HideBySig
    Set(Single): PrivateScope, Public, HideBySig
    Set(Nullable`1): PrivateScope, Public, HideBySig
    Set(ATFloat): PrivateScope, Public, HideBySig
    Set(Double): PrivateScope, Public, HideBySig
    Set(Nullable`1): PrivateScope, Public, HideBySig
    Set(String): PrivateScope, Public, HideBySig
    Set(Byte[]): PrivateScope, Public, HideBySig
    Set(ATArray): PrivateScope, Public, HideBySig
    Set(Object): PrivateScope, Public, HideBySig
    Set(ATMatrix): PrivateScope, Public, HideBySig
    Set(ATVar): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    SaveTo(String, Boolean): PrivateScope, Public, Static, HideBySig
    SaveTo(String, Nullable`1): PrivateScope, Public, Static, HideBySig
    SaveTo(String, Int32): PrivateScope, Public, Static, HideBySig
    SaveTo(String, Nullable`1): PrivateScope, Public, Static, HideBySig
    SaveTo(String, Int64): PrivateScope, Public, Static, HideBySig
    SaveTo(String, Nullable`1): PrivateScope, Public, Static, HideBySig
    SaveTo(String, Single): PrivateScope, Public, Static, HideBySig
    SaveTo(String, Nullable`1): PrivateScope, Public, Static, HideBySig
    SaveTo(String, ATFloat): PrivateScope, Public, Static, HideBySig
    SaveTo(String, Double): PrivateScope, Public, Static, HideBySig
    SaveTo(String, Nullable`1): PrivateScope, Public, Static, HideBySig
    SaveTo(String, String): PrivateScope, Public, Static, HideBySig
    SaveTo(String, Byte[]): PrivateScope, Public, Static, HideBySig
    SaveTo(String, ATArray): PrivateScope, Public, Static, HideBySig
    SaveTo(String, Object): PrivateScope, Public, Static, HideBySig
    SaveTo(String, ATMatrix): PrivateScope, Public, Static, HideBySig
    SaveTo(String, ATVar): PrivateScope, Public, Static, HideBySig
    ReadFrom(String): PrivateScope, Public, Static, HideBySig
Class AmiBroker.IndicatorBase: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Fields:
    Boolean UseCashedAflVars : Public
  Properties:
    Int32 BarCount 'get ' : 
    Int32 SelectedIndex 'get ' : 
    AmiBroker.ATArray Open 'get set' : 
    AmiBroker.ATArray High 'get set' : 
    AmiBroker.ATArray Low 'get set' : 
    AmiBroker.ATArray Close 'get set' : 
    AmiBroker.ATArray Volume 'get set' : 
    AmiBroker.ATArray OpenInt 'get set' : 
    AmiBroker.ATArray Aux1 'get set' : 
    AmiBroker.ATArray Aux2 'get set' : 
    AmiBroker.ATArray Avg 'get set' : 
    System.String Title 'get set' : 
    System.String ToolTip 'get set' : 
    AmiBroker.ATArray Buy 'get set' : 
    AmiBroker.ATArray Short 'get set' : 
    AmiBroker.ATArray Sell 'get set' : 
    AmiBroker.ATArray Cover 'get set' : 
    AmiBroker.ATArray BuyPrice 'get set' : 
    AmiBroker.ATArray ShortPrice 'get set' : 
    AmiBroker.ATArray SellPrice 'get set' : 
    AmiBroker.ATArray CoverPrice 'get set' : 
    AmiBroker.ATArray TickSize 'get set' : 
    AmiBroker.ATArray PointValue 'get set' : 
    AmiBroker.ATArray MarginDeposit 'get set' : 
    AmiBroker.ATArray PositionSize 'get set' : 
    AmiBroker.ATArray PositionScore 'get set' : 
    AmiBroker.ATArray RoundLotSize 'get set' : 
    AmiBroker.ATArray Filter 'get set' : 
    AmiBroker.ATArray Exclude 'get set' : 
    Single GraphXSpace 'set' : 
    Single GraphZOrder 'set' : 
    AmiBroker.ATDateTimeArray DateAndTime 'get ' : 
  Methods:
    get_BarCount(): PrivateScope, Public, HideBySig, SpecialName
    get_SelectedIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_Open(): PrivateScope, Public, HideBySig, SpecialName
    set_Open(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_High(): PrivateScope, Public, HideBySig, SpecialName
    set_High(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_Low(): PrivateScope, Public, HideBySig, SpecialName
    set_Low(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_Close(): PrivateScope, Public, HideBySig, SpecialName
    set_Close(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_Volume(): PrivateScope, Public, HideBySig, SpecialName
    set_Volume(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_OpenInt(): PrivateScope, Public, HideBySig, SpecialName
    set_OpenInt(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_Aux1(): PrivateScope, Public, HideBySig, SpecialName
    set_Aux1(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_Aux2(): PrivateScope, Public, HideBySig, SpecialName
    set_Aux2(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_Avg(): PrivateScope, Public, HideBySig, SpecialName
    set_Avg(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(String): PrivateScope, Public, HideBySig, SpecialName
    get_ToolTip(): PrivateScope, Public, HideBySig, SpecialName
    set_ToolTip(String): PrivateScope, Public, HideBySig, SpecialName
    get_Buy(): PrivateScope, Public, HideBySig, SpecialName
    set_Buy(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_Short(): PrivateScope, Public, HideBySig, SpecialName
    set_Short(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_Sell(): PrivateScope, Public, HideBySig, SpecialName
    set_Sell(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_Cover(): PrivateScope, Public, HideBySig, SpecialName
    set_Cover(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_BuyPrice(): PrivateScope, Public, HideBySig, SpecialName
    set_BuyPrice(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_ShortPrice(): PrivateScope, Public, HideBySig, SpecialName
    set_ShortPrice(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_SellPrice(): PrivateScope, Public, HideBySig, SpecialName
    set_SellPrice(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_CoverPrice(): PrivateScope, Public, HideBySig, SpecialName
    set_CoverPrice(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_TickSize(): PrivateScope, Public, HideBySig, SpecialName
    set_TickSize(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_PointValue(): PrivateScope, Public, HideBySig, SpecialName
    set_PointValue(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_MarginDeposit(): PrivateScope, Public, HideBySig, SpecialName
    set_MarginDeposit(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_PositionSize(): PrivateScope, Public, HideBySig, SpecialName
    set_PositionSize(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_PositionScore(): PrivateScope, Public, HideBySig, SpecialName
    set_PositionScore(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_RoundLotSize(): PrivateScope, Public, HideBySig, SpecialName
    set_RoundLotSize(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_Filter(): PrivateScope, Public, HideBySig, SpecialName
    set_Filter(ATArray): PrivateScope, Public, HideBySig, SpecialName
    get_Exclude(): PrivateScope, Public, HideBySig, SpecialName
    set_Exclude(ATArray): PrivateScope, Public, HideBySig, SpecialName
    set_GraphXSpace(Single): PrivateScope, Public, HideBySig, SpecialName
    set_GraphZOrder(Single): PrivateScope, Public, HideBySig, SpecialName
    get_DateAndTime(): PrivateScope, Public, HideBySig, SpecialName
    RefreshCachedAflVars(): PrivateScope, Public, HideBySig
    DotNetLog(String, String, String): PrivateScope, Public, Static, HideBySig
Class AmiBroker.Optimizer.EvaluateDelegate: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct AmiBroker.Optimizer.RunResult: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.Optimizer.RunResult Terminate = 0 : Public, Static, Literal, HasDefault
    AmiBroker.Optimizer.RunResult RunToNumSteps = 1 : Public, Static, Literal, HasDefault
    AmiBroker.Optimizer.RunResult Continue = 2 : Public, Static, Literal, HasDefault
Struct AmiBroker.Optimizer.SetOptionResult: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.Optimizer.SetOptionResult Unknown = 0 : Public, Static, Literal, HasDefault
    AmiBroker.Optimizer.SetOptionResult Ok = 1 : Public, Static, Literal, HasDefault
    AmiBroker.Optimizer.SetOptionResult RequireFloat = -1 : Public, Static, Literal, HasDefault
    AmiBroker.Optimizer.SetOptionResult RequireString = -2 : Public, Static, Literal, HasDefault
Class AmiBroker.Optimizer.OptimizerBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ResetOptions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetOption(String, Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Init(OptimizeParams&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Run(OptimizeParams&, EvaluateDelegate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Finalize(OptimizeParams&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DotNetLog(String, String, String): PrivateScope, Public, Static, HideBySig
Struct AmiBroker.Optimizer.OptimizeItem: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single Default : Public, InitOnly
    Single Min : Public, InitOnly
    Single Max : Public, InitOnly
    Single Step : Public, InitOnly
    Double Current : Public
    Single Best : Public
  Properties:
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
Struct AmiBroker.Optimizer.Mode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.Optimizer.Mode GetDefaults = 0 : Public, Static, Literal, HasDefault
    AmiBroker.Optimizer.Mode GetSettings = 1 : Public, Static, Literal, HasDefault
    AmiBroker.Optimizer.Mode Optimize = 2 : Public, Static, Literal, HasDefault
Struct AmiBroker.Optimizer.WFMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.Optimizer.WFMode Regular = 0 : Public, Static, Literal, HasDefault
    AmiBroker.Optimizer.WFMode InSample = 0 : Public, Static, Literal, HasDefault
    AmiBroker.Optimizer.WFMode OutOfSample = 2 : Public, Static, Literal, HasDefault
Struct AmiBroker.Optimizer.OptimizeParams: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    OptimizeItemArray Items : Public
  Properties:
    AmiBroker.Optimizer.Mode Mode 'get ' : 
    AmiBroker.Optimizer.WFMode WalkForwardMode 'get ' : 
    Int32 Engine 'get ' : 
    Int32 Qty  'get ' : 
    Int32 LastQty 'get ' : 
    Boolean CanContinue 'get set' : 
    Boolean DuplicateCheck 'get set' : 
    System.String InfoText 'get set' : 
    Int32 InfoTextSize 'get ' : 
    Int64 Step 'get ' : 
    Int64 NumSteps 'get set' : 
    Double TargetCurrent 'get ' : 
    Double TargetBest 'get ' : 
    Int32 TargetBestStep 'get set' : 
  Methods:
    get_Mode(): PrivateScope, Public, HideBySig, SpecialName
    get_WalkForwardMode(): PrivateScope, Public, HideBySig, SpecialName
    get_Engine(): PrivateScope, Public, HideBySig, SpecialName
    get_Qty(): PrivateScope, Public, HideBySig, SpecialName
    get_LastQty(): PrivateScope, Public, HideBySig, SpecialName
    get_CanContinue(): PrivateScope, Public, HideBySig, SpecialName
    set_CanContinue(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DuplicateCheck(): PrivateScope, Public, HideBySig, SpecialName
    set_DuplicateCheck(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_InfoText(): PrivateScope, Public, HideBySig, SpecialName
    set_InfoText(String): PrivateScope, Public, HideBySig, SpecialName
    get_InfoTextSize(): PrivateScope, Public, HideBySig, SpecialName
    get_Step(): PrivateScope, Public, HideBySig, SpecialName
    get_NumSteps(): PrivateScope, Public, HideBySig, SpecialName
    set_NumSteps(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_TargetCurrent(): PrivateScope, Public, HideBySig, SpecialName
    get_TargetBest(): PrivateScope, Public, HideBySig, SpecialName
    get_TargetBestStep(): PrivateScope, Public, HideBySig, SpecialName
    set_TargetBestStep(Int32): PrivateScope, Public, HideBySig, SpecialName
Struct AmiBroker.Optimizer.OptimizeParams+OptimizeItemArray: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 Length : Public
  Properties:
    AmiBroker.Optimizer.OptimizeItem Item [Int32] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, OptimizeItem): PrivateScope, Public, HideBySig, SpecialName
Struct AmiBroker.PlugIn.StockField: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.PlugIn.StockField Open = 0 : Public, Static, Literal, HasDefault
    AmiBroker.PlugIn.StockField High = 1 : Public, Static, Literal, HasDefault
    AmiBroker.PlugIn.StockField Low = 2 : Public, Static, Literal, HasDefault
    AmiBroker.PlugIn.StockField Close = 3 : Public, Static, Literal, HasDefault
    AmiBroker.PlugIn.StockField Volume = 4 : Public, Static, Literal, HasDefault
    AmiBroker.PlugIn.StockField OpenInt = 5 : Public, Static, Literal, HasDefault
    AmiBroker.PlugIn.StockField Aux1 = 6 : Public, Static, Literal, HasDefault
    AmiBroker.PlugIn.StockField Aux2 = 7 : Public, Static, Literal, HasDefault
Class AmiBroker.PlugIn.ABHost: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, HasSecurity, BeforeFieldInit
  Methods:
    GetArraySize(): PrivateScope, Public, Static, HideBySig
    GetVariable(String): PrivateScope, Public, Static, HideBySig
    GetVariable(Byte[]): PrivateScope, Public, Static, HideBySig
    SetVariable(String, ATVar): PrivateScope, Public, Static, HideBySig
    SetVariable(Byte[], ATVar): PrivateScope, Public, Static, HideBySig
    GetStockArray(StockField): PrivateScope, Public, Static, HideBySig
    CallFunction(String, ATVar[]): PrivateScope, Public, Static, HideBySig
    CallFunction(Byte[], ATVar[]): PrivateScope, Public, Static, HideBySig
    AllocArrayResult(): PrivateScope, Public, Static, HideBySig
    GetDatatimeArray(): PrivateScope, Public, Static, HideBySig
    Alloc(UInt32): PrivateScope, Public, Static, HideBySig
    Free(IntPtr): PrivateScope, Public, Static, HideBySig
    StringToByteArray(String): PrivateScope, Public, Static, HideBySig
    ByteArrayToString(Byte[]): PrivateScope, Public, Static, HideBySig
Class AmiBroker.PlugIn.ABMethodAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
Struct AmiBroker.PlugIn.ABParameterType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.PlugIn.ABParameterType Array = 0 : Public, Static, Literal, HasDefault
    AmiBroker.PlugIn.ABParameterType String = 1 : Public, Static, Literal, HasDefault
    AmiBroker.PlugIn.ABParameterType FloatOrArray = 2 : Public, Static, Literal, HasDefault
    AmiBroker.PlugIn.ABParameterType Float = 3 : Public, Static, Literal, HasDefault
    AmiBroker.PlugIn.ABParameterType Default = 4 : Public, Static, Literal, HasDefault
Class AmiBroker.PlugIn.ABParameterAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Ordinal : Public
  Properties:
    AmiBroker.PlugIn.ABParameterType Type 'get set' : 
    Single Default 'get set' : 
    System.String Description 'get set' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(ABParameterType): PrivateScope, Public, HideBySig, SpecialName
    get_Default(): PrivateScope, Public, HideBySig, SpecialName
    set_Default(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
Class AmiBroker.PlugIn.ABPlugInAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class AmiBroker.PlugIn.ABEnumNameAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
Struct AmiBroker.PlugIn.ATArgList: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, AmiBroker.ATVar*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Length : Public, InitOnly
  Properties:
    AmiBroker.ATVar Item [Int32] 'get ' : 
    Int32 HackedLength 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_HackedLength(): PrivateScope, Public, HideBySig, SpecialName
Class AmiBroker.PlugIn.Protected.StartupAlertForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.Form
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct AmiBroker.PlugIn.Protected.DotNetHostEdition: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.PlugIn.Protected.DotNetHostEdition Free = 0 : Public, Static, Literal, HasDefault
    AmiBroker.PlugIn.Protected.DotNetHostEdition Standard = 1 : Public, Static, Literal, HasDefault
    AmiBroker.PlugIn.Protected.DotNetHostEdition Developer = 2 : Public, Static, Literal, HasDefault
    AmiBroker.PlugIn.Protected.DotNetHostEdition Private = 3 : Public, Static, Literal, HasDefault
    AmiBroker.PlugIn.Protected.DotNetHostEdition Subscriber = 4 : Public, Static, Literal, HasDefault
Struct AmiBroker.PlugIn.Protected.DotNetHostInterfaces: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.PlugIn.Protected.DotNetHostInterfaces AFL = 1 : Public, Static, Literal, HasDefault
    AmiBroker.PlugIn.Protected.DotNetHostInterfaces Data = 2 : Public, Static, Literal, HasDefault
    AmiBroker.PlugIn.Protected.DotNetHostInterfaces Optimizer = 4 : Public, Static, Literal, HasDefault
Struct AmiBroker.PlugIn.Protected.DotNetHostInfo: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 StructVersion : Public
    Single ABVersion : Public
    Int32 DnhVersion : Public
    Int32 PlhVersion : Public
    AmiBroker.PlugIn.Protected.DotNetHostEdition Edition : Public
    AmiBroker.PlugIn.Protected.DotNetHostInterfaces Interfaces : Public
    Byte* FullProductName : Public
    Byte* FullProductVersion : Public
    Char* SubscriberAssemblies : Public
    Char* LogFile : Public
    Void* LogAs : Public
    Void* LogAsDotNetHost : Public
    Int32* FreeShutdown : Public
Class AmiBroker.PlugIn.Protected.OptimizerTypeSetter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.MarshalByRefObject
  Methods:
    Set(String, String): PrivateScope, Public, HideBySig
Interface AmiBroker.PlugIn.Protected.IDispatch: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetTypeInfoCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetTypeInfo(Int32(HasFieldMarshal), Int32(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetIDsOfNames(Guid&, String[](HasFieldMarshal), Int32, Int32, Int32[](HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Invoke(Int32, Guid&, Int32(HasFieldMarshal), Int32(HasFieldMarshal), DISPPARAMS&, IntPtr, EXCEPINFO&, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct AmiBroker.PlugIn.Protected.UMDotNetHostInterface: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    IntPtr AddTwoArrays : Public
    IntPtr SubTwoArrays : Public
    IntPtr MultTwoArrays : Public
    IntPtr DivTwoArrays : Public
    IntPtr CompEQTwoArrays : Public
    IntPtr CompNEQTwoArrays : Public
    IntPtr CompLTTwoArrays : Public
    IntPtr CompLTETwoArrays : Public
    IntPtr CompGTTwoArrays : Public
    IntPtr CompGTETwoArrays : Public
    IntPtr AddArrayAndFloat : Public
    IntPtr SubArrayAndFloat : Public
    IntPtr SubFloatAndArray : Public
    IntPtr MultArrayAndFloat : Public
    IntPtr DivArrayAndFloat : Public
    IntPtr DivFloatAndArray : Public
    IntPtr CompEQArrayAndFloat : Public
    IntPtr CompNEQArrayAndFloat : Public
    IntPtr CompLTArrayAndFloat : Public
    IntPtr CompLTEArrayAndFloat : Public
    IntPtr CompLTFloatAndArray : Public
    IntPtr CompLTEFloatAndArray : Public
    IntPtr CompGTArrayAndFloat : Public
    IntPtr CompGTEArrayAndFloat : Public
    IntPtr CompGTFloatAndArray : Public
    IntPtr CompGTEFloatAndArray : Public
    IntPtr BoolAndTwoArrays : Public
    IntPtr BoolOrTwoArrays : Public
    IntPtr BoolCopyArrayToArray : Public
    IntPtr BoolNegArray : Public
    IntPtr FnAbs : Public
    IntPtr FnNz : Public
    IntPtr SetArrayToFloat : Public
    IntPtr CopyArrayToArray : Public
Class AmiBroker.PlugIn.Protected.SignedXmlWithId: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Security.Cryptography.Xml.SignedXml
    Void .ctor(System.Xml.XmlDocument): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Xml.XmlElement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetIdElement(XmlDocument, String): PrivateScope, Public, Virtual, HideBySig
Class AmiBroker.Data.ABDataSourceAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
Struct AmiBroker.Data.AmiDate: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt64 Date : Public
    UInt64 FutureMask = 1 : Public, Static, Literal, HasDefault
    UInt64 EodMask = 8791798054912 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Year 'get set' : 
    Int32 Month 'get set' : 
    Int32 Day  'get set' : 
    Int32 Hour 'get set' : 
    Int32 Minute 'get set' : 
    Int32 Second 'get set' : 
    Int32 MilliSec 'get set' : 
    Int32 MicroSec 'get set' : 
    Boolean IsFuture 'get set' : 
    Boolean IsEod 'get set' : 
  Methods:
    get_Year(): PrivateScope, Public, HideBySig, SpecialName
    set_Year(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Month(): PrivateScope, Public, HideBySig, SpecialName
    set_Month(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Day(): PrivateScope, Public, HideBySig, SpecialName
    set_Day(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Hour(): PrivateScope, Public, HideBySig, SpecialName
    set_Hour(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Minute(): PrivateScope, Public, HideBySig, SpecialName
    set_Minute(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Second(): PrivateScope, Public, HideBySig, SpecialName
    set_Second(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MilliSec(): PrivateScope, Public, HideBySig, SpecialName
    set_MilliSec(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MicroSec(): PrivateScope, Public, HideBySig, SpecialName
    set_MicroSec(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IsFuture(): PrivateScope, Public, HideBySig, SpecialName
    set_IsFuture(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsEod(): PrivateScope, Public, HideBySig, SpecialName
    set_IsEod(Boolean): PrivateScope, Public, HideBySig, SpecialName
    op_Explicit(AmiDate): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(DateTime): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct AmiBroker.Data.AmiVarType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.Data.AmiVarType None = 0 : Public, Static, Literal, HasDefault
    AmiBroker.Data.AmiVarType Float = 1 : Public, Static, Literal, HasDefault
    AmiBroker.Data.AmiVarType Array = 2 : Public, Static, Literal, HasDefault
    AmiBroker.Data.AmiVarType String = 3 : Public, Static, Literal, HasDefault
Struct AmiBroker.Data.AmiVar: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    AmiBroker.Data.AmiVarType Type : Public
    Single Float : Public
    Single[] Array : Public
    System.String String : Public
Struct AmiBroker.Data.IntradaySettings: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 TimeShift : Public, InitOnly
    Int32 FilterAfterHours : Public, InitOnly
    Int32 SessionStart : Public, InitOnly
    Int32 SessionEnd : Public, InitOnly
    Int32 FilterWeekends : Public, InitOnly
    Int32 DailyCompressionMode : Public, InitOnly
    Int32 NightSessionStart : Public, InitOnly
    Int32 NightSessionEnd : Public, InitOnly
Struct AmiBroker.Data.Workspace: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 DataSource : Public, InitOnly
    Int32 DataLocalMode : Public, InitOnly
    Int32 NumBars : Public, InitOnly
    Int32 TimeBase : Public, InitOnly
    Int32 AllowMixedEODIntra : Public, InitOnly
    Int32 RequestDataOnSave : Public, InitOnly
    Int32 PadNonTradingDays : Public, InitOnly
    AmiBroker.Data.IntradaySettings IS : Public, InitOnly
Struct AmiBroker.Data.Workspace+<ReservedB>e__FixedBuffer: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 FixedElementField : Public
Struct AmiBroker.Data.Timestamps: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    AmiBroker.Data.AmiDate Item [Int32] 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
Struct AmiBroker.Data.ExtraData: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.String Ticker : Public
    System.String Field : Public
    Int32 ArraySize : Public
    AmiBroker.Data.Periodicity Periodicity : Public
    AmiBroker.Data.Timestamps Timestamps : Public
Class AmiBroker.Data.AllocDelegate: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class AmiBroker.Data.DataSourceBase: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Configure(String, InfoSite&): PrivateScope, Public, Static, HideBySig
    GetExtraData(String, String, Periodicity, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetExtraDataEx(ExtraData): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetQuotesEx(String, QuotationArray&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRecentInfo(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetStatus(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSymbolLimit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsBackfillComplete(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Notify(PluginNotification&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTimeBase(Periodicity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NotifyQuotesUpdate(): PrivateScope, Public, Static, HideBySig
    NotifyRecentInfoUpdate(String, RecentInfo&): PrivateScope, Public, Static, HideBySig
    NotifyRefreshUI(): PrivateScope, Public, Static, HideBySig
    DotNetLog(String, String, String): PrivateScope, Public, Static, HideBySig
Struct AmiBroker.Data.Category: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.Data.Category Market = 0 : Public, Static, Literal, HasDefault
    AmiBroker.Data.Category Group = 1 : Public, Static, Literal, HasDefault
    AmiBroker.Data.Category Sector = 2 : Public, Static, Literal, HasDefault
    AmiBroker.Data.Category Industry = 3 : Public, Static, Literal, HasDefault
    AmiBroker.Data.Category WatchList = 4 : Public, Static, Literal, HasDefault
Class AmiBroker.Data.GetStockQtyDelegate: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class AmiBroker.Data.SetCategoryNameDelegate: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Category, Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Category, Int32, String, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class AmiBroker.Data.GetCategoryNameDelegate: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Category, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Category, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class AmiBroker.Data.SetIndustrySectorDelegate: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Int32, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class AmiBroker.Data.GetIndustrySectorDelegate: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class AmiBroker.Data.InfoSite: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    AmiBroker.Data.GetStockQtyDelegate GetStockQty : Public
    AmiBroker.Data.SetCategoryNameDelegate SetCategoryName : Public
    AmiBroker.Data.GetCategoryNameDelegate GetCategoryName : Public
    AmiBroker.Data.SetIndustrySectorDelegate SetIndustrySector : Public
    AmiBroker.Data.GetIndustrySectorDelegate GetIndustrySector : Public
  Methods:
    AddStockNew(String): PrivateScope, Public, HideBySig
Struct AmiBroker.Data.Reason: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.Data.Reason DatabaseLoaded = 1 : Public, Static, Literal, HasDefault
    AmiBroker.Data.Reason DatabaseUnloaded = 2 : Public, Static, Literal, HasDefault
    AmiBroker.Data.Reason SettingsChanged = 4 : Public, Static, Literal, HasDefault
    AmiBroker.Data.Reason RightMouseClick = 8 : Public, Static, Literal, HasDefault
Struct AmiBroker.Data.PluginNotification: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    IntPtr MainWnd : Public, InitOnly
  Properties:
    AmiBroker.Data.Reason Reason 'get ' : 
    System.String DatabasePath 'get ' : 
    AmiBroker.Data.StockInfo CurrentSI 'get ' : 
    AmiBroker.Data.Workspace Workspace 'get ' : 
  Methods:
    get_Reason(): PrivateScope, Public, HideBySig, SpecialName
    get_DatabasePath(): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentSI(): PrivateScope, Public, HideBySig, SpecialName
    get_Workspace(): PrivateScope, Public, HideBySig, SpecialName
Struct AmiBroker.Data.StatusCode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.Data.StatusCode OK = 0 : Public, Static, Literal, HasDefault
    AmiBroker.Data.StatusCode Warning = 268435456 : Public, Static, Literal, HasDefault
    AmiBroker.Data.StatusCode MinorError = 536870912 : Public, Static, Literal, HasDefault
    AmiBroker.Data.StatusCode SevereError = 805306368 : Public, Static, Literal, HasDefault
Struct AmiBroker.Data.PluginStatus: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(AmiBroker.Data.StatusCode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(AmiBroker.Data.StatusCode, System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(AmiBroker.Data.StatusCode, System.Drawing.Color, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    AmiBroker.Data.StatusCode Status : Public
    System.Drawing.Color Color : Public
    System.String LongMessage : Public
    System.String ShortMessage : Public
Struct AmiBroker.Data.Quotation: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    AmiBroker.Data.AmiDate DateTime : Public
    Single Price : Public
    Single Open : Public
    Single High : Public
    Single Low : Public
    Single Volume : Public
    Single OpenInterest : Public
    Single AuxData1 : Public
    Single AuxData2 : Public
  Methods:
    Merge(Quotation&): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct AmiBroker.Data.Periodicity: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.Data.Periodicity Tick = 0 : Public, Static, Literal, HasDefault
    AmiBroker.Data.Periodicity OneSecond = 1 : Public, Static, Literal, HasDefault
    AmiBroker.Data.Periodicity FiveSeconds = 5 : Public, Static, Literal, HasDefault
    AmiBroker.Data.Periodicity FifteenSeconds = 15 : Public, Static, Literal, HasDefault
    AmiBroker.Data.Periodicity OneMinute = 60 : Public, Static, Literal, HasDefault
    AmiBroker.Data.Periodicity FiveMinutes = 300 : Public, Static, Literal, HasDefault
    AmiBroker.Data.Periodicity FifteenMinutes = 900 : Public, Static, Literal, HasDefault
    AmiBroker.Data.Periodicity OneHour = 3600 : Public, Static, Literal, HasDefault
    AmiBroker.Data.Periodicity EndOfDay = 86400 : Public, Static, Literal, HasDefault
Struct AmiBroker.Data.QuotationArray: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    AmiBroker.Data.Periodicity Periodicity 'get ' : 
    Int32 Length 'get ' : 
    Int32 Count 'get ' : 
    AmiBroker.Data.StockInfo StockInfo 'get ' : 
    AmiBroker.Data.Quotation Item [Int32] 'get set' : 
  Methods:
    get_Periodicity(): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_StockInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Quotation): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    Free(Int32): PrivateScope, Public, HideBySig
    Merge(Quotation): PrivateScope, Public, HideBySig
    Merge(QuotationList): PrivateScope, Public, HideBySig
    Copy(Int32, Int32): PrivateScope, Public, HideBySig
Class AmiBroker.Data.QuotationList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(AmiBroker.Data.Periodicity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.ICollection`1[AmiBroker.Data.Quotation]
    System.Collections.Generic.IEnumerable`1[AmiBroker.Data.Quotation]
    System.Collections.IEnumerable
  Fields:
    AmiBroker.Data.Periodicity Periodicity : Public
  Properties:
    Int32 Count 'get ' : 
    AmiBroker.Data.Quotation Item [Int32] 'get set' : 
    Boolean IsSynchronized 'get ' : 
    System.Object SyncRoot 'get ' : 
    Boolean IsReadOnly 'get ' : 
  Methods:
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Quotation): PrivateScope, Public, HideBySig, SpecialName
    Add(Quotation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    Insert(Int32, Quotation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(Quotation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveRange(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Merge(Quotation): PrivateScope, Public, HideBySig
    MergeEod(Quotation, AmiDate): PrivateScope, Public, HideBySig
    CopyTo(Quotation[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_IsSynchronized(): PrivateScope, Public, HideBySig, SpecialName
    get_SyncRoot(): PrivateScope, Public, HideBySig, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Contains(Quotation): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class AmiBroker.Data.QuotationEnum: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(AmiBroker.Data.QuotationList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[AmiBroker.Data.Quotation]
    System.IDisposable
    System.Collections.IEnumerator
  Fields:
    AmiBroker.Data.QuotationList quotation : Public
  Properties:
    AmiBroker.Data.Quotation Current 'get ' : 
  Methods:
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Struct AmiBroker.Data.RecentInfoField: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.Data.RecentInfoField None = 0 : Public, Static, Literal, HasDefault
    AmiBroker.Data.RecentInfoField Last = 1 : Public, Static, Literal, HasDefault
    AmiBroker.Data.RecentInfoField Open = 2 : Public, Static, Literal, HasDefault
    AmiBroker.Data.RecentInfoField HighLow = 4 : Public, Static, Literal, HasDefault
    AmiBroker.Data.RecentInfoField TradeVol = 8 : Public, Static, Literal, HasDefault
    AmiBroker.Data.RecentInfoField TotalVol = 16 : Public, Static, Literal, HasDefault
    AmiBroker.Data.RecentInfoField OpenInt = 32 : Public, Static, Literal, HasDefault
    AmiBroker.Data.RecentInfoField PrevChange = 64 : Public, Static, Literal, HasDefault
    AmiBroker.Data.RecentInfoField Bid = 128 : Public, Static, Literal, HasDefault
    AmiBroker.Data.RecentInfoField Ask = 256 : Public, Static, Literal, HasDefault
    AmiBroker.Data.RecentInfoField EPS = 512 : Public, Static, Literal, HasDefault
    AmiBroker.Data.RecentInfoField DividEnd = 1024 : Public, Static, Literal, HasDefault
    AmiBroker.Data.RecentInfoField Shares = 2048 : Public, Static, Literal, HasDefault
    AmiBroker.Data.RecentInfoField Week52 = 4096 : Public, Static, Literal, HasDefault
    AmiBroker.Data.RecentInfoField DateUpdate = 8192 : Public, Static, Literal, HasDefault
    AmiBroker.Data.RecentInfoField DateChange = 16384 : Public, Static, Literal, HasDefault
Struct AmiBroker.Data.RecentInfoStatus: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AmiBroker.Data.RecentInfoStatus None = 0 : Public, Static, Literal, HasDefault
    AmiBroker.Data.RecentInfoStatus Update = 1 : Public, Static, Literal, HasDefault
    AmiBroker.Data.RecentInfoStatus BidAsk = 2 : Public, Static, Literal, HasDefault
    AmiBroker.Data.RecentInfoStatus Trade = 4 : Public, Static, Literal, HasDefault
    AmiBroker.Data.RecentInfoStatus BarsReady = 8 : Public, Static, Literal, HasDefault
    AmiBroker.Data.RecentInfoStatus Incomplete = 16 : Public, Static, Literal, HasDefault
    AmiBroker.Data.RecentInfoStatus NewBid = 32 : Public, Static, Literal, HasDefault
    AmiBroker.Data.RecentInfoStatus NewAsk = 64 : Public, Static, Literal, HasDefault
Struct AmiBroker.Data.RecentInfo: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 StructSize : Public
    AmiBroker.Data.RecentInfoStatus Status : Public
    AmiBroker.Data.RecentInfoField Bitmap : Public
    Single Open : Public
    Single High : Public
    Single Low : Public
    Single Last : Public
    Int32 iTradeVol : Public
    Int32 iTotalVol : Public
    Single OpenInt : Public
    Single Change : Public
    Single Prev : Public
    Single Bid : Public
    Int32 BidSize : Public
    Single Ask : Public
    Int32 AskSize : Public
    Single EPS : Public
    Single Dividend : Public
    Single DivYield : Public
    Int32 Shares : Public
    Single Week52High : Public
    Int32 Week52HighDate : Public
    Single Week52Low : Public
    Int32 Week52LowDate : Public
    Int32 DateChange : Public
    Int32 TimeChange : Public
    Int32 DateUpdate : Public
    Int32 TimeUpdate : Public
    Single TradeVol : Public
    Single TotalVol : Public
  Properties:
    System.String Name 'get set' : 
    System.String Exchange 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Exchange(): PrivateScope, Public, HideBySig, SpecialName
    set_Exchange(String): PrivateScope, Public, HideBySig, SpecialName
Struct AmiBroker.Data.RecentInfo+<name>e__FixedBuffer: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte FixedElementField : Public
Struct AmiBroker.Data.RecentInfo+<exchange>e__FixedBuffer: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte FixedElementField : Public
Class AmiBroker.Data.StockInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    System.String ShortName 'get set' : 
    System.String AliasName 'get set' : 
    System.String WebId 'get set' : 
    System.String FullName 'get set' : 
    System.String Address 'get set' : 
    System.String Country 'get set' : 
    System.String Currency 'get set' : 
    Int32 DataSource 'get set' : 
    Int32 DataLocalMode 'get set' : 
    Int32 MarketID 'get set' : 
    Int32 GroupID 'get set' : 
    Int32 IndustryID 'get set' : 
    Int32 Gics 'get set' : 
    Int32 Flags 'get set' : 
    Int32 MoreFlags 'get set' : 
    Single MarginDeposit 'get set' : 
    Single PointValue 'get set' : 
    Single RoundLotSize 'get set' : 
    Single TickSize 'get set' : 
    Int32 Decimals 'get set' : 
    LastSplitFactorArray LastSplitFactor 'get ' : 
    AmiBroker.Data.AmiDate LastSplitDate 'get set' : 
    AmiBroker.Data.AmiDate DividendPayDate 'get set' : 
    AmiBroker.Data.AmiDate ExDividendDate 'get set' : 
    Single SharesFloat 'get set' : 
    Single SharesOut 'get set' : 
    Single DividendPerShare 'get set' : 
    Single BookValuePerShare 'get set' : 
    Single PEGRatio 'get set' : 
    Single ProfitMargin 'get set' : 
    Single OperatingMargin 'get set' : 
    Single OneYearTargetPrice 'get set' : 
    Single ReturnOnAssets 'get set' : 
    Single ReturnOnEquity 'get set' : 
    Single QtrlyRevenueGrowth 'get set' : 
    Single GrossProfitPerShare 'get set' : 
    Single SalesPerShare 'get set' : 
    Single EBITDAPerShare 'get set' : 
    Single QtrlyEarningsGrowth 'get set' : 
    Single InsiderHoldPercent 'get set' : 
    Single InstitutionHoldPercent 'get set' : 
    Single SharesShort 'get set' : 
    Single SharesShortPrevMonth 'get set' : 
    Single ForwardEPS 'get set' : 
    Single EPS 'get set' : 
    Single EPSEstCurrentYear 'get set' : 
    Single EPSEstNextYear 'get set' : 
    Single EPSEstNextQuarter 'get set' : 
    Single ForwardDividendPerShare 'get set' : 
    Single Beta 'get set' : 
    Single OperatingCashFlow 'get set' : 
    Single LeveredFreeCashFlow 'get set' : 
    UserDataArray UserData 'get ' : 
  Methods:
    get_ShortName(): PrivateScope, Public, HideBySig, SpecialName
    set_ShortName(String): PrivateScope, Public, HideBySig, SpecialName
    get_AliasName(): PrivateScope, Public, HideBySig, SpecialName
    set_AliasName(String): PrivateScope, Public, HideBySig, SpecialName
    get_WebId(): PrivateScope, Public, HideBySig, SpecialName
    set_WebId(String): PrivateScope, Public, HideBySig, SpecialName
    get_FullName(): PrivateScope, Public, HideBySig, SpecialName
    set_FullName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Address(): PrivateScope, Public, HideBySig, SpecialName
    set_Address(String): PrivateScope, Public, HideBySig, SpecialName
    get_Country(): PrivateScope, Public, HideBySig, SpecialName
    set_Country(String): PrivateScope, Public, HideBySig, SpecialName
    get_Currency(): PrivateScope, Public, HideBySig, SpecialName
    set_Currency(String): PrivateScope, Public, HideBySig, SpecialName
    get_DataSource(): PrivateScope, Public, HideBySig, SpecialName
    set_DataSource(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DataLocalMode(): PrivateScope, Public, HideBySig, SpecialName
    set_DataLocalMode(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MarketID(): PrivateScope, Public, HideBySig, SpecialName
    set_MarketID(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_GroupID(): PrivateScope, Public, HideBySig, SpecialName
    set_GroupID(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IndustryID(): PrivateScope, Public, HideBySig, SpecialName
    set_IndustryID(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Gics(): PrivateScope, Public, HideBySig, SpecialName
    set_Gics(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    set_Flags(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MoreFlags(): PrivateScope, Public, HideBySig, SpecialName
    set_MoreFlags(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MarginDeposit(): PrivateScope, Public, HideBySig, SpecialName
    set_MarginDeposit(Single): PrivateScope, Public, HideBySig, SpecialName
    get_PointValue(): PrivateScope, Public, HideBySig, SpecialName
    set_PointValue(Single): PrivateScope, Public, HideBySig, SpecialName
    get_RoundLotSize(): PrivateScope, Public, HideBySig, SpecialName
    set_RoundLotSize(Single): PrivateScope, Public, HideBySig, SpecialName
    get_TickSize(): PrivateScope, Public, HideBySig, SpecialName
    set_TickSize(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Decimals(): PrivateScope, Public, HideBySig, SpecialName
    set_Decimals(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LastSplitFactor(): PrivateScope, Public, HideBySig, SpecialName
    get_LastSplitDate(): PrivateScope, Public, HideBySig, SpecialName
    set_LastSplitDate(AmiDate): PrivateScope, Public, HideBySig, SpecialName
    get_DividendPayDate(): PrivateScope, Public, HideBySig, SpecialName
    set_DividendPayDate(AmiDate): PrivateScope, Public, HideBySig, SpecialName
    get_ExDividendDate(): PrivateScope, Public, HideBySig, SpecialName
    set_ExDividendDate(AmiDate): PrivateScope, Public, HideBySig, SpecialName
    get_SharesFloat(): PrivateScope, Public, HideBySig, SpecialName
    set_SharesFloat(Single): PrivateScope, Public, HideBySig, SpecialName
    get_SharesOut(): PrivateScope, Public, HideBySig, SpecialName
    set_SharesOut(Single): PrivateScope, Public, HideBySig, SpecialName
    get_DividendPerShare(): PrivateScope, Public, HideBySig, SpecialName
    set_DividendPerShare(Single): PrivateScope, Public, HideBySig, SpecialName
    get_BookValuePerShare(): PrivateScope, Public, HideBySig, SpecialName
    set_BookValuePerShare(Single): PrivateScope, Public, HideBySig, SpecialName
    get_PEGRatio(): PrivateScope, Public, HideBySig, SpecialName
    set_PEGRatio(Single): PrivateScope, Public, HideBySig, SpecialName
    get_ProfitMargin(): PrivateScope, Public, HideBySig, SpecialName
    set_ProfitMargin(Single): PrivateScope, Public, HideBySig, SpecialName
    get_OperatingMargin(): PrivateScope, Public, HideBySig, SpecialName
    set_OperatingMargin(Single): PrivateScope, Public, HideBySig, SpecialName
    get_OneYearTargetPrice(): PrivateScope, Public, HideBySig, SpecialName
    set_OneYearTargetPrice(Single): PrivateScope, Public, HideBySig, SpecialName
    get_ReturnOnAssets(): PrivateScope, Public, HideBySig, SpecialName
    set_ReturnOnAssets(Single): PrivateScope, Public, HideBySig, SpecialName
    get_ReturnOnEquity(): PrivateScope, Public, HideBySig, SpecialName
    set_ReturnOnEquity(Single): PrivateScope, Public, HideBySig, SpecialName
    get_QtrlyRevenueGrowth(): PrivateScope, Public, HideBySig, SpecialName
    set_QtrlyRevenueGrowth(Single): PrivateScope, Public, HideBySig, SpecialName
    get_GrossProfitPerShare(): PrivateScope, Public, HideBySig, SpecialName
    set_GrossProfitPerShare(Single): PrivateScope, Public, HideBySig, SpecialName
    get_SalesPerShare(): PrivateScope, Public, HideBySig, SpecialName
    set_SalesPerShare(Single): PrivateScope, Public, HideBySig, SpecialName
    get_EBITDAPerShare(): PrivateScope, Public, HideBySig, SpecialName
    set_EBITDAPerShare(Single): PrivateScope, Public, HideBySig, SpecialName
    get_QtrlyEarningsGrowth(): PrivateScope, Public, HideBySig, SpecialName
    set_QtrlyEarningsGrowth(Single): PrivateScope, Public, HideBySig, SpecialName
    get_InsiderHoldPercent(): PrivateScope, Public, HideBySig, SpecialName
    set_InsiderHoldPercent(Single): PrivateScope, Public, HideBySig, SpecialName
    get_InstitutionHoldPercent(): PrivateScope, Public, HideBySig, SpecialName
    set_InstitutionHoldPercent(Single): PrivateScope, Public, HideBySig, SpecialName
    get_SharesShort(): PrivateScope, Public, HideBySig, SpecialName
    set_SharesShort(Single): PrivateScope, Public, HideBySig, SpecialName
    get_SharesShortPrevMonth(): PrivateScope, Public, HideBySig, SpecialName
    set_SharesShortPrevMonth(Single): PrivateScope, Public, HideBySig, SpecialName
    get_ForwardEPS(): PrivateScope, Public, HideBySig, SpecialName
    set_ForwardEPS(Single): PrivateScope, Public, HideBySig, SpecialName
    get_EPS(): PrivateScope, Public, HideBySig, SpecialName
    set_EPS(Single): PrivateScope, Public, HideBySig, SpecialName
    get_EPSEstCurrentYear(): PrivateScope, Public, HideBySig, SpecialName
    set_EPSEstCurrentYear(Single): PrivateScope, Public, HideBySig, SpecialName
    get_EPSEstNextYear(): PrivateScope, Public, HideBySig, SpecialName
    set_EPSEstNextYear(Single): PrivateScope, Public, HideBySig, SpecialName
    get_EPSEstNextQuarter(): PrivateScope, Public, HideBySig, SpecialName
    set_EPSEstNextQuarter(Single): PrivateScope, Public, HideBySig, SpecialName
    get_ForwardDividendPerShare(): PrivateScope, Public, HideBySig, SpecialName
    set_ForwardDividendPerShare(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Beta(): PrivateScope, Public, HideBySig, SpecialName
    set_Beta(Single): PrivateScope, Public, HideBySig, SpecialName
    get_OperatingCashFlow(): PrivateScope, Public, HideBySig, SpecialName
    set_OperatingCashFlow(Single): PrivateScope, Public, HideBySig, SpecialName
    get_LeveredFreeCashFlow(): PrivateScope, Public, HideBySig, SpecialName
    set_LeveredFreeCashFlow(Single): PrivateScope, Public, HideBySig, SpecialName
    get_UserData(): PrivateScope, Public, HideBySig, SpecialName
Class AmiBroker.Data.StockInfo+UserDataArray: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  Properties:
    Single Item [Int32] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Single): PrivateScope, Public, HideBySig, SpecialName
Class AmiBroker.Data.StockInfo+LastSplitFactorArray: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  Properties:
    Int16 Item [Int32] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Int16): PrivateScope, Public, HideBySig, SpecialName
